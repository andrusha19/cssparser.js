/* parser generated by jison 0.4.17 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var cssparser = (function(){
var o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,4],$V1=[1,5],$V2=[1,24],$V3=[1,25],$V4=[1,26],$V5=[1,42],$V6=[1,20],$V7=[1,30],$V8=[1,43],$V9=[1,19],$Va=[1,44],$Vb=[1,51],$Vc=[1,45],$Vd=[1,38],$Ve=[1,48],$Vf=[1,49],$Vg=[1,47],$Vh=[1,46],$Vi=[1,39],$Vj=[1,40],$Vk=[1,41],$Vl=[1,50],$Vm=[5,7,8,25,27,30,36,37,46,48,56,57,67,70,71,117,118,119,120,121,122,123,124],$Vn=[1,56],$Vo=[5,7,8,15,25,27,30,36,37,46,48,56,57,67,70,71,117,118,119,120,121,122,123,124],$Vp=[14,51],$Vq=[1,66],$Vr=[1,68],$Vs=[1,65],$Vt=[1,67],$Vu=[14,51,69],$Vv=[1,73],$Vw=[1,72],$Vx=[1,74],$Vy=[1,81],$Vz=[1,86],$VA=[14,51,67,69,70,71,86,108,109,117,118,119,120,121,122,123,124],$VB=[1,94],$VC=[1,95],$VD=[1,93],$VE=[1,98],$VF=[1,99],$VG=[1,100],$VH=[1,101],$VI=[1,105],$VJ=[1,106],$VK=[1,118],$VL=[1,126],$VM=[1,127],$VN=[2,175],$VO=[14,15,17,51,52,62,63,65,67,69,70,71,83,84,86,87,88,101,102,103,108,109,117,118,119,120,121,122,123,124,126,127,128,129,130,131,136,138,140,144],$VP=[67,70,71,117,118,119,120,121,122,123,124],$VQ=[17,62,65,93,119,121,144],$VR=[1,139],$VS=[14,17,51],$VT=[1,141],$VU=[119,121,144],$VV=[14,63,64],$VW=[1,161],$VX=[5,7,8,15,25,27,30,36,37,46,48,56,57,67,70,71,117,118,119,120,121,122,123,124,140,144],$VY=[15,17],$VZ=[15,25,27,30,36,37,46,48,56,57,67,70,71,117,118,119,120,121,122,123,124],$V_=[1,185],$V$=[62,65],$V01=[1,206],$V11=[1,207],$V21=[1,202],$V31=[52,103,119,121,136,138,140,143,144],$V41=[52,62,67,69,70,71,84,87,103,117,118,119,120,121,122,123,124,135,136,138,140,144],$V51=[1,228],$V61=[1,225],$V71=[1,226],$V81=[1,227],$V91=[15,119,121,140,144],$Va1=[14,17,51,63],$Vb1=[69,126],$Vc1=[15,17,51,52,62,69,70,71,84,86,87,88,101,102,103,117,118,119,121,123,126,136,138,140,144],$Vd1=[15,17,101],$Ve1=[1,240],$Vf1=[15,17,51,69,101,102],$Vg1=[1,243],$Vh1=[1,244],$Vi1=[1,245],$Vj1=[1,246],$Vk1=[1,247],$Vl1=[15,17,51,52,62,69,70,71,84,86,87,88,101,102,103,117,118,119,121,123,136,138,140,144],$Vm1=[52,62,84,103,117,118,119,121,123,136,138,140,144],$Vn1=[51,69],$Vo1=[69,70,71,86,87,88];
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"stylesheet":3,"StylesheetList":4,"EOF":5,"StylesheetComponent":6,"CDO":7,"CDC":8,"QualifiedRule":9,"AtRule":10,"RuleList":11,"RuleListComponent":12,"RuleBlock":13,"LEFT_CURLY_BRACKET":14,"RIGHT_CURLY_BRACKET":15,"AtSimpleRules":16,"SEMICOLON":17,"AtNestedRule":18,"AtFontface":19,"AtKeyframes":20,"AtPage":21,"AtRuleCharset":22,"AtImport":23,"AtNamespace":24,"AT_CHARSET":25,"StringVal":26,"AT_IMPORT":27,"UrlOrStringVal":28,"MediaQueryList":29,"AT_NAMESPACE":30,"IDENT":31,"AtNestedRuleComponent":32,"AtMedia":33,"AtDocument":34,"AtSupport":35,"AT_MEDIA":36,"AT_KEYFRAMES":37,"AtKeyframesName":38,"AtKeyframesBlockList":39,"AtKeyframesBlock":40,"AtKeyframesSelector":41,"DeclarationList":42,"IdentVal":43,"PercentageVal":44,"AtPageComponent":45,"AT_PAGE":46,"PseudoClassSelectorList":47,"AT_DOCUMENT":48,"AtDocumentFuncValList":49,"AtDocumentFuncVal":50,"COMMA":51,"URL_FUNC":52,"URL_PREFIX_FUNC":53,"DOMAIN_FUNC":54,"REGEXP_FUNC":55,"AT_FONT_FACE":56,"AT_SUPPORTS":57,"AtSupportExpressionList":58,"AtSupportExpression":59,"AndOrOperator":60,"AtSupportExpressionComponent":61,"OPERATOR_NOT":62,"OPERATOR_AND":63,"OPERATOR_OR":64,"LEFT_PARENTHESIS":65,"PropertyName":66,"COLON":67,"PropertyValue":68,"RIGHT_PARENTHESIS":69,"ASTERISK":70,"ASTERISK_WITH_WHITESPACE":71,"PropertyValueItemSequence":72,"PropertyValueItem":73,"GenericPropertyValueItem":74,"CalcOperator":75,"UrlVal":76,"FunctionVal":77,"GenericNumericVal":78,"HashVal":79,"CalcFunction":80,"FUNCTION":81,"FunctionParameters":82,"ASSIGN_MARK":83,"CALC_FUNC":84,"CalcExpression":85,"PLUS_SIGN":86,"HYPHEN_MINUS":87,"SOLIDUS":88,"MediaQuery":89,"MediaQueryExpressionList":90,"OnlyNot":91,"And":92,"OPERATOR_ONLY":93,"MediaQueryExpression":94,"MediaFeature":95,"GenericVal":96,"SelectorList":97,"Declaration":98,"DeclarationComponent":99,"DeclarationMandatoryComponent":100,"IMPORTANT":101,"REVERSE_SOLIDUS":102,"NUMBER":103,"SelectorGroup":104,"Selector":105,"SelectorCombinator":106,"DescendantSelector":107,"GREATER_THAN_SIGN":108,"TILDE":109,"UniversalSelector":110,"ClassSelector":111,"TypeSelector":112,"IdSelector":113,"AttributeSelector":114,"PseudoClassSelector":115,"PseudoElementSelector":116,"HASH_STRING":117,"HEXA_NUMBER":118,"GENERAL_IDENT":119,"FULL_STOP":120,"SELECTOR_TYPE_WITH_WHITESPACE":121,"SELECTOR_CLASS_WITH_WHITESPACE":122,"SELECTOR_ID_WITH_WHITESPACE":123,"LEFT_SQUARE_BRACKET":124,"SelectorAttrOperator":125,"RIGHT_SQUARE_BRACKET":126,"INCLUDE_MATCH":127,"DASH_MATCH":128,"PREFIX_MATCH":129,"SUFFIX_MATCH":130,"SUBSTRING_MATCH":131,"PseudoClassFunc":132,"PseudoClassFuncParam":133,"PseudoClassFuncParam_an_plus_b":134,"N":135,"DIMENSION":136,"NumberVal":137,"STRING":138,"DimensionVal":139,"PERCENTAGE":140,"IdOrUrlOrStringVal":141,"NumericVal":142,"HexaNumericVal":143,"VENDOR_PREFIX_IDENT":144,"$accept":0,"$end":1},
terminals_: {2:"error",5:"EOF",7:"CDO",8:"CDC",14:"LEFT_CURLY_BRACKET",15:"RIGHT_CURLY_BRACKET",17:"SEMICOLON",25:"AT_CHARSET",27:"AT_IMPORT",30:"AT_NAMESPACE",36:"AT_MEDIA",37:"AT_KEYFRAMES",46:"AT_PAGE",48:"AT_DOCUMENT",51:"COMMA",52:"URL_FUNC",53:"URL_PREFIX_FUNC",54:"DOMAIN_FUNC",55:"REGEXP_FUNC",56:"AT_FONT_FACE",57:"AT_SUPPORTS",62:"OPERATOR_NOT",63:"OPERATOR_AND",64:"OPERATOR_OR",65:"LEFT_PARENTHESIS",67:"COLON",69:"RIGHT_PARENTHESIS",70:"ASTERISK",71:"ASTERISK_WITH_WHITESPACE",83:"ASSIGN_MARK",84:"CALC_FUNC",86:"PLUS_SIGN",87:"HYPHEN_MINUS",88:"SOLIDUS",93:"OPERATOR_ONLY",101:"IMPORTANT",102:"REVERSE_SOLIDUS",103:"NUMBER",108:"GREATER_THAN_SIGN",109:"TILDE",117:"HASH_STRING",118:"HEXA_NUMBER",119:"GENERAL_IDENT",120:"FULL_STOP",121:"SELECTOR_TYPE_WITH_WHITESPACE",122:"SELECTOR_CLASS_WITH_WHITESPACE",123:"SELECTOR_ID_WITH_WHITESPACE",124:"LEFT_SQUARE_BRACKET",126:"RIGHT_SQUARE_BRACKET",127:"INCLUDE_MATCH",128:"DASH_MATCH",129:"PREFIX_MATCH",130:"SUFFIX_MATCH",131:"SUBSTRING_MATCH",135:"N",136:"DIMENSION",138:"STRING",140:"PERCENTAGE",143:"HexaNumericVal",144:"VENDOR_PREFIX_IDENT"},
productions_: [0,[3,2],[4,1],[4,2],[6,1],[6,1],[6,1],[6,1],[11,1],[11,2],[12,1],[12,1],[13,3],[13,2],[10,2],[10,1],[10,1],[10,1],[10,1],[16,1],[16,1],[16,1],[22,2],[23,2],[23,3],[24,2],[24,3],[18,2],[32,1],[32,1],[32,1],[33,2],[20,4],[20,5],[39,1],[39,2],[40,2],[38,1],[38,1],[41,1],[41,1],[21,2],[45,1],[45,2],[34,2],[49,1],[49,3],[50,1],[50,1],[50,1],[50,1],[19,2],[35,2],[58,1],[58,3],[59,1],[59,2],[60,1],[60,1],[61,5],[66,1],[66,2],[66,2],[68,1],[68,3],[72,1],[73,1],[73,2],[73,3],[74,1],[74,1],[74,1],[74,1],[74,1],[74,1],[74,1],[77,2],[77,3],[81,2],[81,2],[82,1],[82,3],[82,3],[80,2],[80,3],[85,1],[85,3],[75,1],[75,1],[75,1],[75,1],[75,1],[29,1],[29,3],[89,1],[89,1],[89,2],[89,3],[89,4],[91,1],[91,1],[92,1],[90,1],[90,3],[94,3],[94,5],[95,1],[9,2],[42,3],[42,2],[98,1],[98,2],[98,3],[99,1],[99,2],[100,5],[100,3],[97,1],[97,3],[104,1],[104,2],[104,3],[104,1],[104,2],[104,3],[106,1],[106,1],[106,1],[105,1],[105,1],[105,1],[105,1],[105,1],[105,1],[105,1],[110,1],[113,1],[113,1],[112,1],[111,2],[111,2],[111,2],[111,2],[111,2],[107,1],[107,1],[107,1],[107,1],[114,5],[114,3],[125,1],[125,1],[125,1],[125,1],[125,1],[125,1],[116,3],[47,1],[47,2],[115,2],[115,2],[132,2],[132,3],[133,1],[133,1],[134,1],[134,3],[134,4],[134,1],[134,1],[134,3],[137,1],[26,1],[139,1],[76,1],[43,1],[79,1],[79,1],[79,1],[44,1],[28,1],[28,1],[141,1],[141,1],[141,1],[78,1],[78,1],[78,1],[142,1],[142,1],[96,1],[96,1],[31,1],[31,1],[31,1]],
performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
/* this == yyval */

var $0 = $$.length - 1;
switch (yystate) {
case 1:

      console.log(JSON.stringify($$[$0-1].toJSON(), null, 4))
      this.$ = $$[$0-1]
    
break;
case 2:
this.$ = StyleSheet.create().add($$[$0]);
break;
case 3: case 35:
this.$ = $$[$0-1].add($$[$0]);
break;
case 8: case 80:
this.$ = [$$[$0]];
break;
case 9: case 67:
this.$ = concat($$[$0-1], $$[$0]);
break;
case 12:
this.$ = $$[$0-1];
break;
case 13:
this.$ = null;
break;
case 22:
this.$ = AtCharset.create($$[$0-1]).set('value', $$[$0]);
break;
case 23:
this.$ = AtImport.create($$[$0-1]).set('value', $$[$0]);
break;
case 24:
this.$ = AtImport.create($$[$0-2]).set('value', $$[$0-1]).set('nextExpression', $$[$0]);
break;
case 25:
this.$ = AtNamespace.create($$[$0-1]).set('value', $$[$0]);
break;
case 26:
this.$ = AtNamespace.create($$[$0-2]).set('prefix', $$[$0-1]).set('value', $$[$0]);
break;
case 27: case 41:
this.$ = $$[$0-1].set('nestedRules', $$[$0]);
break;
case 31:
this.$ = AtMedia.create($$[$0-1]).set('value', $$[$0]);
break;
case 32:
this.$ = AtKeyframes.create($$[$0-3]).set('name', $$[$0-2]);
break;
case 33:
this.$ = AtKeyframes.create($$[$0-4]).set('name', $$[$0-3]).set('value', $$[$0-1]);
break;
case 34:
this.$ = AtKeyframesBlockList.create().add($$[$0]);
break;
case 36:
this.$ = AtKeyframesBlock.create($$[$0-1]).set('value', $$[$0]);
break;
case 42:
this.$ = AtPage.create($$[$0]);
break;
case 43:
this.$ = AtPage.create($$[$0-1]).set('value', $$[$0]);
break;
case 44:
this.$ = AtDocument.create($$[$0-1]).set('value', $$[$0]);
break;
case 45:
this.$ = concat($$[$0], []);
break;
case 46: case 64: case 81: case 112:
this.$ = concat($$[$0-2], $$[$0]);
break;
case 47:
this.$ = FunctionVal.create('url', $$[$0]);
break;
case 48:
this.$ = FunctionVal.create('url-prefix', $$[$0]);
break;
case 49:
this.$ = FunctionVal.create('domain', $$[$0]);
break;
case 50:
this.$ = FunctionVal.create('regexp', $$[$0]);
break;
case 51:
this.$ = AtFontface.create($$[$0-1]).set('value', $$[$0]);
break;
case 52:
this.$ = AtSupport.create($$[$0-1]).set('value', $$[$0]);
break;
case 54:

      this.$ = $$[$0-2]
      $$[$0-2].set('nextExpression', $$[$0-1])
      $$[$0-1].set('nextExpression', $$[$0])
    
break;
case 56:
this.$ = $$[$0].set('operator', $$[$0-1]);
break;
case 57: case 58: case 101:
this.$ = Operator.create($$[$0]);
break;
case 59:
this.$ = AtSupportExpression.create().set('property', $$[$0-3]).set('value', $$[$0-1]);
break;
case 61: case 62:
this.$ =  $$[$0].set('asteriskHack', true);
break;
case 65:
this.$ = SequenceVal.create($$[$0]);
break;
case 68:
this.$ = Expression.create().set('operator', $$[$0-1]).set('lhs', $$[$0-2]).set('rhs', $$[$0]);
break;
case 76: case 161:
this.$ = FunctionVal.create($$[$0-1]);
break;
case 77: case 162:
this.$ = FunctionVal.create($$[$0-2], $$[$0-1]);
break;
case 82:
this.$ = [Expression.create($$[$0-1], $$[$0-2], $$[$0])]    /* same as `Expression.create().set('operator', $$[$0-1]).set('lhs', $$[$0-2]).set('rhs', $$[$0])` */;
break;
case 83:
this.$ = FunctionVal.create('calc');
break;
case 84:
this.$ = FunctionVal.create('calc', $$[$0-1]);
break;
case 86:
this.$ = Expression.create($$[$0-1], $$[$0-2], $$[$0])    /* same as `Expression.create().set('operator', $$[$0-1]).set('lhs', $$[$0-2]).set('rhs', $$[$0])` */;
break;
case 88: case 194:
this.$ = $$[$0].trimRight();
break;
case 92:
this.$ = MediaQueryList.create().add($$[$0]);
break;
case 93:
this.$ = $$[$0-2].add($$[$0]);
break;
case 95:
this.$ = MediaQuery.create().set('mediaType', $$[$0]);
break;
case 96:
this.$ = MediaQuery.create().set('prefix', $$[$0-1]).set('mediaType', $$[$0]);
break;
case 97:

      this.$ = MediaQuery.create().set('mediaType', $$[$0-2])
      this.$.set('nextExpression', $$[$0-1])
      $$[$0-1].set('nextExpression', $$[$0])
    
break;
case 98:

      this.$ = MediaQuery.create().set('prefix', $$[$0-3]).set('mediaType', $$[$0-2])
      this.$.set('nextExpression', $$[$0-1])
      $$[$0-1].set('nextExpression', $$[$0])
    
break;
case 103:

      this.$ = $$[$0-2]
      $$[$0-2].set("nextExpression", $$[$0-1])
      $$[$0-1].set("nextExpression", $$[$0])
    
break;
case 104:
this.$ = MediaQueryExpression.create($$[$0-1]);
break;
case 105:
this.$ = MediaQueryExpression.create($$[$0-3], $$[$0-1]);
break;
case 107:
this.$ = QualifiedRule.create($$[$0]).set('selectors', $$[$0-1]);
break;
case 108:
this.$ = DeclarationList.create($$[$0-1]);
break;
case 109:
this.$ = DeclarationList.create();
break;
case 114:
this.$ = $$[$0-1].set('important', true);
break;
case 115:
this.$ = Declaration.create($$[$0-4], $$[$0-2]).set('ieOnlyHack', true);
break;
case 116:
this.$ = Declaration.create($$[$0-2], $$[$0]);
break;
case 117:
this.$ = SelectorList.create().add(RootSelector.create($$[$0]));
break;
case 118:
this.$ = $$[$0-2].add(RootSelector.create($$[$0]));
break;
case 120:

      this.$ = $$[$0-1]
      $$[$0-1].set('nextSelector', $$[$0])
    
break;
case 121: case 124:

      this.$ = $$[$0-2]
      $$[$0-2].set('nextSelector', $$[$0-1])
      $$[$0-1].set('nextSelector', $$[$0])
    
break;
case 123:

      var combinator = DescendantSelectorCombinator.create(' ')

      // $$[$0-1] -> combinator -> $$[$0]
      this.$ = $$[$0-1]
      this.$.set('nextSelector', combinator)
      combinator.set('nextSelector', $$[$0])
    
break;
case 125:
this.$ = ChildSelectorCombinator.create($$[$0]);
break;
case 126:
this.$ = AdjacentSiblingSelectorCombinator.create($$[$0]);
break;
case 127:
this.$ = SiblingSelectorCombinator.create($$[$0]);
break;
case 135:
this.$ = UniversalSelector.create($$[$0]);
break;
case 136: case 137:
this.$ = IdSelector.create(HashVal.create($$[$0]));
break;
case 138:
this.$ = TypeSelector.create($$[$0]);
break;
case 139: case 140: case 141: case 142: case 143:
this.$ = ClassSelector.create($$[$0-1] + $$[$0]);
break;
case 144:
this.$ = UniversalSelector.create($$[$0].trimRight());
break;
case 145:
this.$ = TypeSelector.create($$[$0].trimRight());
break;
case 146:
this.$ = ClassSelector.create($$[$0].trimRight());
break;
case 147:
this.$ = IdSelector.create(HashVal.create($$[$0].trimRight()));
break;
case 148:
this.$ = AttributeSelector.create(Expression.create($$[$0-2], $$[$0-3], $$[$0-1]));
break;
case 149:
this.$ = AttributeSelector.create($$[$0-1]);
break;
case 150:
this.$ = Operator.create($$[$0])		/* include   */;
break;
case 151:
this.$ = Operator.create($$[$0])		/* dash      */;
break;
case 152:
this.$ = Operator.create($$[$0])		/* prefix    */;
break;
case 153:
this.$ = Operator.create($$[$0])		/* suffix    */;
break;
case 154:
this.$ = Operator.create($$[$0])		/* substring */;
break;
case 155:
this.$ = Operator.create($$[$0])		/* equal     */;
break;
case 156:
this.$ = PseudoElementSelector.create($$[$0]);
break;
case 158:
this.$ = $$[$0-1].set('nextSelector', $$[$0]);
break;
case 159: case 160:
this.$ = PseudoClassSelector.create($$[$0]);
break;
case 165:
this.$ = $$[$0]             /* n */;
break;
case 166:
this.$ = $$[$0-2] + $$[$0-1] + $$[$0]   /* n + 1 */;
break;
case 167:
this.$ = $$[$0-3] + $$[$0-2] + $$[$0-1]   /* -n + 1 */;
break;
case 168:
this.$ = $$[$0]             /* 1 */;
break;
case 169:
this.$ = $$[$0]             /* 2n or -2n */;
break;
case 170:
this.$ = $$[$0-2] + $$[$0-1]        /* -n + 1 */;
break;
case 171:
this.$ = NumberVal.create($$[$0]);
break;
case 172:
this.$ = StringVal.create($$[$0]);
break;
case 173:
this.$ = DimensionVal.create($$[$0]);
break;
case 174:
this.$ = UrlVal.create($$[$0]);
break;
case 175:
this.$ = IdentVal.create($$[$0]);
break;
case 176: case 177:
this.$ = HashVal.create($$[$0]);
break;
case 178:
this.$ = HashVal.create($$[$0].trimRight());
break;
case 179:
this.$ = PercentageVal.create($$[$0]);
break;
}
},
table: [{3:1,4:2,6:3,7:$V0,8:$V1,9:6,10:7,16:9,18:10,19:11,20:12,21:13,22:15,23:16,24:17,25:$V2,27:$V3,30:$V4,32:18,33:27,34:28,35:29,36:$V5,37:$V6,45:21,46:$V7,48:$V8,56:$V9,57:$Va,67:$Vb,70:$Vc,71:$Vd,97:8,104:14,105:22,107:23,110:31,111:32,112:33,113:34,114:35,115:36,116:37,117:$Ve,118:$Vf,119:$Vg,120:$Vh,121:$Vi,122:$Vj,123:$Vk,124:$Vl},{1:[3]},{5:[1,52],6:53,7:$V0,8:$V1,9:6,10:7,16:9,18:10,19:11,20:12,21:13,22:15,23:16,24:17,25:$V2,27:$V3,30:$V4,32:18,33:27,34:28,35:29,36:$V5,37:$V6,45:21,46:$V7,48:$V8,56:$V9,57:$Va,67:$Vb,70:$Vc,71:$Vd,97:8,104:14,105:22,107:23,110:31,111:32,112:33,113:34,114:35,115:36,116:37,117:$Ve,118:$Vf,119:$Vg,120:$Vh,121:$Vi,122:$Vj,123:$Vk,124:$Vl},o($Vm,[2,2]),o($Vm,[2,4]),o($Vm,[2,5]),o($Vm,[2,6]),o($Vm,[2,7]),{14:$Vn,42:54,51:[1,55]},{17:[1,57]},o($Vo,[2,15]),o($Vo,[2,16]),o($Vo,[2,17]),o($Vo,[2,18]),o($Vp,[2,117]),{17:[2,19]},{17:[2,20]},{17:[2,21]},{13:58,14:[1,59]},{14:$Vn,42:60},{26:63,31:64,38:61,43:62,119:$Vq,121:$Vr,138:$Vs,144:$Vt},{14:$Vn,42:69},o($Vu,[2,119],{105:22,107:23,110:31,111:32,112:33,113:34,114:35,115:36,116:37,104:70,106:71,67:$Vb,70:$Vc,71:$Vd,86:$Vv,108:$Vw,109:$Vx,117:$Ve,118:$Vf,119:$Vg,120:$Vh,121:$Vi,122:$Vj,123:$Vk,124:$Vl}),o($Vu,[2,122],{105:22,107:23,110:31,111:32,112:33,113:34,114:35,115:36,116:37,104:75,106:76,67:$Vb,70:$Vc,71:$Vd,86:$Vv,108:$Vw,109:$Vx,117:$Ve,118:$Vf,119:$Vg,120:$Vh,121:$Vi,122:$Vj,123:$Vk,124:$Vl}),{26:77,138:$Vs},{26:79,28:78,52:$Vy,76:80,138:$Vs},{26:79,28:82,31:83,52:$Vy,76:80,119:$Vq,121:$Vr,138:$Vs,144:$Vt},{14:[2,28]},{14:[2,29]},{14:[2,30]},{14:[2,42],47:84,67:$Vz,115:85},o($VA,[2,128]),o($VA,[2,129]),o($VA,[2,130]),o($VA,[2,131]),o($VA,[2,132]),o($VA,[2,133]),o($VA,[2,134]),o($VA,[2,144]),o($VA,[2,145]),o($VA,[2,146]),o($VA,[2,147]),{29:87,31:64,43:90,62:$VB,65:$VC,89:88,90:89,91:91,93:$VD,94:92,119:$Vq,121:$Vr,144:$Vt},{49:96,50:97,52:$VE,53:$VF,54:$VG,55:$VH},{58:102,59:103,61:104,62:$VI,65:$VJ},o($VA,[2,135]),{31:107,62:[1,111],63:[1,108],64:[1,109],93:[1,110],119:$Vq,121:$Vr,144:$Vt},o($VA,[2,138]),o($VA,[2,136]),o($VA,[2,137]),{31:64,43:112,119:$Vq,121:$Vr,144:$Vt},{31:116,43:113,62:$VK,67:[1,115],81:117,119:$Vq,121:$Vr,132:114,144:$Vt},{1:[2,1]},o($Vm,[2,3]),o($Vo,[2,107]),{67:$Vb,70:$Vc,71:$Vd,104:119,105:22,107:23,110:31,111:32,112:33,113:34,114:35,115:36,116:37,117:$Ve,118:$Vf,119:$Vg,120:$Vh,121:$Vi,122:$Vj,123:$Vk,124:$Vl},{15:[1,121],31:64,43:125,66:124,70:$VL,71:$VM,98:120,99:122,100:123,119:$Vq,121:$Vr,144:$Vt},o($Vo,[2,14]),o($Vo,[2,27]),{9:131,10:132,11:128,12:130,15:[1,129],16:9,18:10,19:11,20:12,21:13,22:15,23:16,24:17,25:$V2,27:$V3,30:$V4,32:18,33:27,34:28,35:29,36:$V5,37:$V6,45:21,46:$V7,48:$V8,56:$V9,57:$Va,67:$Vb,70:$Vc,71:$Vd,97:8,104:14,105:22,107:23,110:31,111:32,112:33,113:34,114:35,115:36,116:37,117:$Ve,118:$Vf,119:$Vg,120:$Vh,121:$Vi,122:$Vj,123:$Vk,124:$Vl},o($Vo,[2,51]),{14:[1,133]},{14:[2,37]},{14:[2,38]},o([14,17,51,63,67,69,70,71,83,86,108,109,117,118,119,120,121,122,123,124,126,127,128,129,130,131],$VN),o([14,15,17,51,52,62,65,69,70,71,84,86,87,88,93,101,102,103,117,118,119,121,123,126,136,138,140,144],[2,172]),o($VO,[2,192]),o($VO,[2,193]),o($VO,[2,194]),o($Vo,[2,41]),o($Vu,[2,120]),{67:$Vb,70:$Vc,71:$Vd,104:134,105:22,107:23,110:31,111:32,112:33,113:34,114:35,115:36,116:37,117:$Ve,118:$Vf,119:$Vg,120:$Vh,121:$Vi,122:$Vj,123:$Vk,124:$Vl},o($VP,[2,125]),o($VP,[2,126]),o($VP,[2,127]),o($Vu,[2,123]),{67:$Vb,70:$Vc,71:$Vd,104:135,105:22,107:23,110:31,111:32,112:33,113:34,114:35,115:36,116:37,117:$Ve,118:$Vf,119:$Vg,120:$Vh,121:$Vi,122:$Vj,123:$Vk,124:$Vl},{17:[2,22]},{17:[2,23],29:136,31:64,43:90,62:$VB,65:$VC,89:88,90:89,91:91,93:$VD,94:92,119:$Vq,121:$Vr,144:$Vt},o($VQ,[2,180]),o($VQ,[2,181]),o([15,17,51,52,62,65,69,70,71,84,86,87,88,93,101,102,103,117,118,119,121,123,126,136,138,140,144],[2,174]),{17:[2,25]},{26:79,28:137,52:$Vy,76:80,138:$Vs},{14:[2,43]},{14:[2,157],47:138,67:$Vz,115:85},{31:116,43:113,62:$VK,81:117,119:$Vq,121:$Vr,132:114,144:$Vt},{14:[2,31],51:$VR},o($VS,[2,92]),o($VS,[2,94]),o($VS,[2,95],{92:140,63:$VT}),{31:64,43:142,119:$Vq,121:$Vr,144:$Vt},o($VS,[2,102],{92:143,63:$VT}),o($VU,[2,99]),o($VU,[2,100]),{31:64,43:145,95:144,119:$Vq,121:$Vr,144:$Vt},{14:[2,44],51:[1,146]},o($Vp,[2,45]),o($Vp,[2,47]),o($Vp,[2,48]),o($Vp,[2,49]),o($Vp,[2,50]),{14:[2,52],60:147,63:[1,148],64:[1,149]},o($VV,[2,53]),o($VV,[2,55]),{61:150,65:$VJ},{31:64,43:125,66:151,70:$VL,71:$VM,119:$Vq,121:$Vr,144:$Vt},o($VA,[2,139]),o($VA,[2,140]),o($VA,[2,141]),o($VA,[2,142]),o($VA,[2,143]),{83:[1,159],125:152,126:[1,153],127:[1,154],128:[1,155],129:[1,156],130:[1,157],131:[1,158]},o($VA,[2,159]),o($VA,[2,160]),{31:64,43:160,119:$Vq,121:$Vr,144:$Vt},o([14,15,17,51,52,62,67,69,70,71,84,86,87,88,101,102,103,108,109,117,118,119,120,121,122,123,124,136,138,140,144],$VN,{65:$VW}),{67:$Vb,69:[1,162],70:$Vc,71:$Vd,87:[1,167],103:[1,168],104:164,105:22,107:23,110:31,111:32,112:33,113:34,114:35,115:36,116:37,117:$Ve,118:$Vf,119:$Vg,120:$Vh,121:$Vi,122:$Vj,123:$Vk,124:$Vl,133:163,134:165,135:[1,166],136:[1,169]},{65:[1,170]},o($Vp,[2,118]),{15:[1,171]},o($VX,[2,109]),{15:[2,110],17:[1,172]},o($VY,[2,113],{101:[1,173]}),{67:[1,174]},{67:[2,60]},{31:64,43:175,119:$Vq,121:$Vr,144:$Vt},{31:64,43:176,119:$Vq,121:$Vr,144:$Vt},{15:[1,177]},o($Vo,[2,13]),{9:131,10:132,11:178,12:130,15:[2,8],16:9,18:10,19:11,20:12,21:13,22:15,23:16,24:17,25:$V2,27:$V3,30:$V4,32:18,33:27,34:28,35:29,36:$V5,37:$V6,45:21,46:$V7,48:$V8,56:$V9,57:$Va,67:$Vb,70:$Vc,71:$Vd,97:8,104:14,105:22,107:23,110:31,111:32,112:33,113:34,114:35,115:36,116:37,117:$Ve,118:$Vf,119:$Vg,120:$Vh,121:$Vi,122:$Vj,123:$Vk,124:$Vl},o($VZ,[2,10]),o($VZ,[2,11]),{15:[1,179],31:64,39:180,40:181,41:182,43:183,44:184,119:$Vq,121:$Vr,140:$V_,144:$Vt},o($Vu,[2,121]),o($Vu,[2,124]),{17:[2,24],51:$VR},{17:[2,26]},{14:[2,158]},{31:64,43:90,62:$VB,65:$VC,89:186,90:89,91:91,93:$VD,94:92,119:$Vq,121:$Vr,144:$Vt},{65:$VC,90:187,94:92},{65:[2,101]},o($VS,[2,96],{92:188,63:$VT}),{65:$VC,90:189,94:92},{67:[1,191],69:[1,190]},o([67,69],[2,106]),{50:192,52:$VE,53:$VF,54:$VG,55:$VH},{59:193,61:104,62:$VI,65:$VJ},o($V$,[2,57]),o($V$,[2,58]),o($VV,[2,56]),{67:[1,194]},{26:198,31:64,43:200,44:205,52:$Vy,76:199,78:201,96:195,103:$V01,119:$Vq,121:$Vr,136:$V11,137:203,138:$Vs,139:204,140:$V_,141:196,142:197,143:$V21,144:$Vt},o($VA,[2,149]),o($V31,[2,150]),o($V31,[2,151]),o($V31,[2,152]),o($V31,[2,153]),o($V31,[2,154]),o($V31,[2,155]),o($VA,[2,156]),o($V41,[2,78]),o($VA,[2,161]),{69:[1,208]},{69:[2,163]},{69:[2,164]},{69:[2,165],86:[1,209]},{103:[1,211],135:[1,210]},{69:[2,168]},{69:[2,169]},o($V41,[2,79]),o($VX,[2,108]),{15:[2,111],31:64,43:125,66:124,70:$VL,71:$VM,98:212,99:122,100:123,119:$Vq,121:$Vr,144:$Vt},o($VY,[2,114]),{26:217,31:116,43:219,44:205,52:$Vy,62:$VK,68:213,72:214,73:215,74:216,76:218,77:220,78:221,79:222,80:223,81:224,84:$V51,103:$V01,117:$V61,118:$V71,119:$Vq,121:$Vr,123:$V81,136:$V11,137:203,138:$Vs,139:204,140:$V_,144:$Vt},{67:[2,61]},{67:[2,62]},o($Vo,[2,12]),{15:[2,9]},o($Vo,[2,32]),{15:[1,229],31:64,40:230,41:182,43:183,44:184,119:$Vq,121:$Vr,140:$V_,144:$Vt},o($V91,[2,34]),{14:$Vn,42:231},{14:[2,39]},{14:[2,40]},o([14,15,17,51,52,62,69,70,71,84,86,87,88,101,102,103,117,118,119,121,123,126,136,138,140,144],[2,179]),o($VS,[2,93]),o($VS,[2,97]),{65:$VC,90:232,94:92},o($VS,[2,103]),o($Va1,[2,104]),{26:198,31:64,43:200,44:205,52:$Vy,76:199,78:201,96:233,103:$V01,119:$Vq,121:$Vr,136:$V11,137:203,138:$Vs,139:204,140:$V_,141:196,142:197,143:$V21,144:$Vt},o($Vp,[2,46]),o($VV,[2,54]),{26:217,31:116,43:219,44:205,52:$Vy,62:$VK,68:234,72:214,73:215,74:216,76:218,77:220,78:221,79:222,80:223,81:224,84:$V51,103:$V01,117:$V61,118:$V71,119:$Vq,121:$Vr,123:$V81,136:$V11,137:203,138:$Vs,139:204,140:$V_,144:$Vt},{126:[1,235]},o($Vb1,[2,190]),o($Vb1,[2,191]),o($Vb1,[2,182]),o($Vb1,[2,183]),o($Vb1,[2,184]),o($Vb1,[2,188]),o($Vb1,[2,189]),o($Vc1,[2,185]),o($Vc1,[2,186]),o($Vc1,[2,187]),o($Vc1,[2,171]),o($Vc1,[2,173]),o($VA,[2,162]),{103:[1,236]},{86:[1,237]},{135:[1,238]},{15:[2,112]},o($Vd1,[2,116],{51:$Ve1,102:[1,239]}),o($Vf1,[2,63]),o($Vf1,[2,65],{31:116,137:203,139:204,44:205,26:217,76:218,43:219,77:220,78:221,79:222,80:223,81:224,74:241,75:242,52:$Vy,62:$VK,70:$Vg1,71:$Vh1,84:$V51,86:$Vi1,87:$Vj1,88:$Vk1,103:$V01,117:$V61,118:$V71,119:$Vq,121:$Vr,123:$V81,136:$V11,138:$Vs,140:$V_,144:$Vt}),o($Vl1,[2,66]),o($Vl1,[2,69]),o($Vl1,[2,70]),o($Vl1,[2,71]),o($Vl1,[2,72]),o($Vl1,[2,73]),o($Vl1,[2,74]),o($Vl1,[2,75]),{26:217,31:251,43:219,44:205,52:$Vy,62:$VK,69:[1,248],73:250,74:216,76:218,77:220,78:221,79:222,80:223,81:224,82:249,84:$V51,103:$V01,117:$V61,118:$V71,119:$Vq,121:$Vr,123:$V81,136:$V11,137:203,138:$Vs,139:204,140:$V_,144:$Vt},o($Vl1,[2,176]),o($Vl1,[2,177]),o($Vl1,[2,178]),{44:205,69:[1,252],78:254,85:253,103:$V01,136:$V11,137:203,139:204,140:$V_},o($Vo,[2,33]),o($V91,[2,35]),o($V91,[2,36]),o($VS,[2,98]),{69:[1,255]},{51:$Ve1,69:[1,256]},o($VA,[2,148]),{69:[2,166]},{103:[1,257]},{69:[2,170]},{103:[1,258]},{26:217,31:116,43:219,44:205,52:$Vy,62:$VK,72:259,73:215,74:216,76:218,77:220,78:221,79:222,80:223,81:224,84:$V51,103:$V01,117:$V61,118:$V71,119:$Vq,121:$Vr,123:$V81,136:$V11,137:203,138:$Vs,139:204,140:$V_,144:$Vt},o($Vl1,[2,67]),{26:217,31:116,43:219,44:205,52:$Vy,62:$VK,74:260,76:218,77:220,78:221,79:222,80:223,81:224,84:$V51,103:$V01,117:$V61,118:$V71,119:$Vq,121:$Vr,123:$V81,136:$V11,137:203,138:$Vs,139:204,140:$V_,144:$Vt},o($Vm1,[2,87]),o($Vm1,[2,88]),o($Vm1,[2,89]),o($Vm1,[2,90]),o($Vm1,[2,91]),o($Vl1,[2,76]),{51:[1,262],69:[1,261]},o($Vn1,[2,80],{31:116,137:203,139:204,44:205,26:217,76:218,43:219,77:220,78:221,79:222,80:223,81:224,74:241,75:242,52:$Vy,62:$VK,70:$Vg1,71:$Vh1,84:$V51,86:$Vi1,87:$Vj1,88:$Vk1,103:$V01,117:$V61,118:$V71,119:$Vq,121:$Vr,123:$V81,136:$V11,138:$Vs,140:$V_,144:$Vt}),o([51,52,62,69,70,71,84,86,87,88,103,117,118,119,121,123,136,138,140,144],$VN,{65:$VW,83:[1,263]}),o($Vl1,[2,83]),{69:[1,264],70:$Vg1,71:$Vh1,75:265,86:$Vi1,87:$Vj1,88:$Vk1},o($Vo1,[2,85]),o($Va1,[2,105]),o($VV,[2,59]),{69:[2,167]},o($Vd1,[2,115]),o($Vf1,[2,64]),o($Vl1,[2,68]),o($Vl1,[2,77]),{26:217,31:116,43:219,44:205,52:$Vy,62:$VK,73:266,74:216,76:218,77:220,78:221,79:222,80:223,81:224,84:$V51,103:$V01,117:$V61,118:$V71,119:$Vq,121:$Vr,123:$V81,136:$V11,137:203,138:$Vs,139:204,140:$V_,144:$Vt},{44:205,78:267,103:$V01,136:$V11,137:203,139:204,140:$V_},o($Vl1,[2,84]),{44:205,78:268,103:$V01,136:$V11,137:203,139:204,140:$V_},o($Vn1,[2,81],{31:116,137:203,139:204,44:205,26:217,76:218,43:219,77:220,78:221,79:222,80:223,81:224,74:241,75:242,52:$Vy,62:$VK,70:$Vg1,71:$Vh1,84:$V51,86:$Vi1,87:$Vj1,88:$Vk1,103:$V01,117:$V61,118:$V71,119:$Vq,121:$Vr,123:$V81,136:$V11,138:$Vs,140:$V_,144:$Vt}),o($Vn1,[2,82]),o($Vo1,[2,86])],
defaultActions: {15:[2,19],16:[2,20],17:[2,21],27:[2,28],28:[2,29],29:[2,30],52:[2,1],62:[2,37],63:[2,38],77:[2,22],82:[2,25],84:[2,43],125:[2,60],137:[2,26],138:[2,158],141:[2,101],164:[2,163],165:[2,164],168:[2,168],169:[2,169],175:[2,61],176:[2,62],178:[2,9],183:[2,39],184:[2,40],212:[2,112],236:[2,166],238:[2,170],257:[2,167]},
parseError: function parseError(str, hash) {
    if (hash.recoverable) {
        this.trace(str);
    } else {
        function _parseError (msg, hash) {
            this.message = msg;
            this.hash = hash;
        }
        _parseError.prototype = Error;

        throw new _parseError(str, hash);
    }
},
parse: function parse(input) {
    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    var args = lstack.slice.call(arguments, 1);
    var lexer = Object.create(this.lexer);
    var sharedState = { yy: {} };
    for (var k in this.yy) {
        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {
            sharedState.yy[k] = this.yy[k];
        }
    }
    lexer.setInput(input, sharedState.yy);
    sharedState.yy.lexer = lexer;
    sharedState.yy.parser = this;
    if (typeof lexer.yylloc == 'undefined') {
        lexer.yylloc = {};
    }
    var yyloc = lexer.yylloc;
    lstack.push(yyloc);
    var ranges = lexer.options && lexer.options.ranges;
    if (typeof sharedState.yy.parseError === 'function') {
        this.parseError = sharedState.yy.parseError;
    } else {
        this.parseError = Object.getPrototypeOf(this).parseError;
    }
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    _token_stack:
        var lex = function () {
            var token;
            token = lexer.lex() || EOF;
            if (typeof token !== 'number') {
                token = self.symbols_[token] || token;
            }
            return token;
        };
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == 'undefined') {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
                    if (typeof action === 'undefined' || !action.length || !action[0]) {
                var errStr = '';
                expected = [];
                for (p in table[state]) {
                    if (this.terminals_[p] && p > TERROR) {
                        expected.push('\'' + this.terminals_[p] + '\'');
                    }
                }
                if (lexer.showPosition) {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\n' + lexer.showPosition() + '\nExpecting ' + expected.join(', ') + ', got \'' + (this.terminals_[symbol] || symbol) + '\'';
                } else {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\'' + (this.terminals_[symbol] || symbol) + '\'');
                }
                this.parseError(errStr, {
                    text: lexer.match,
                    token: this.terminals_[symbol] || symbol,
                    line: lexer.yylineno,
                    loc: yyloc,
                    expected: expected
                });
            }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(lexer.yytext);
            lstack.push(lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = lexer.yyleng;
                yytext = lexer.yytext;
                yylineno = lexer.yylineno;
                yyloc = lexer.yylloc;
                if (recovering > 0) {
                    recovering--;
                }
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {
                first_line: lstack[lstack.length - (len || 1)].first_line,
                last_line: lstack[lstack.length - 1].last_line,
                first_column: lstack[lstack.length - (len || 1)].first_column,
                last_column: lstack[lstack.length - 1].last_column
            };
            if (ranges) {
                yyval._$.range = [
                    lstack[lstack.length - (len || 1)].range[0],
                    lstack[lstack.length - 1].range[1]
                ];
            }
            r = this.performAction.apply(yyval, [
                yytext,
                yyleng,
                yylineno,
                sharedState.yy,
                action[1],
                vstack,
                lstack
            ].concat(args));
            if (typeof r !== 'undefined') {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}};

    'use strict';

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var concat = function concat(l, r) {
    l = l ? l : [];
    r = r ? r : [];

    l = l instanceof Array ? l : [l];
    r = r instanceof Array ? r : [r];

    return l.concat(r);
};

var _toJSON = function _toJSON(o) {
    if (!o) {
        return o;
    }

    return o.hasOwnProperty('toJSON') ? o.toJSON() : o;
};

var CSSObject = function () {
    function CSSObject() {
        _classCallCheck(this, CSSObject);
    }

    _createClass(CSSObject, [{
        key: 'getType',
        value: function getType(type) {
            return 'OBJECT';
        }
    }, {
        key: 'set',
        value: function set(key, value) {
            if (value || value == false || value == 0) {
                this[key] = value;
            }
            return this;
        }
    }, {
        key: 'get',
        value: function get(key, defaultValue) {
            if (key in this) {
                return this[key];
            }
            return defaultValue;
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                value: _toJSON(this.get('value'))
            };
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new CSSObject().set('value', value);
        }
    }]);

    return CSSObject;
}();

var StyleSheet = function (_CSSObject) {
    _inherits(StyleSheet, _CSSObject);

    function StyleSheet() {
        _classCallCheck(this, StyleSheet);

        return _possibleConstructorReturn(this, (StyleSheet.__proto__ || Object.getPrototypeOf(StyleSheet)).apply(this, arguments));
    }

    _createClass(StyleSheet, [{
        key: 'getType',
        value: function getType(type) {
            return 'STYLESHEET';
        }
    }, {
        key: 'add',
        value: function add(component) {
            if (!this.value) {
                this.value = [];
            }

            if (component) {
                this.value.push(component);
            }

            return this;
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            var json = [];
            var components = this.get('value', []);

            return {
                type: this.getType(),
                value: components.map(function (o) {
                    return _toJSON(o);
                })
            };
        }
    }], [{
        key: 'create',
        value: function create() {
            return new StyleSheet();
        }
    }]);

    return StyleSheet;
}(CSSObject);

var Operator = function (_CSSObject2) {
    _inherits(Operator, _CSSObject2);

    function Operator() {
        _classCallCheck(this, Operator);

        return _possibleConstructorReturn(this, (Operator.__proto__ || Object.getPrototypeOf(Operator)).apply(this, arguments));
    }

    _createClass(Operator, [{
        key: 'getType',
        value: function getType() {
            return 'OPERATOR';
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            var json = _get(Operator.prototype.__proto__ || Object.getPrototypeOf(Operator.prototype), 'toJSON', this).call(this);
            json.nextExpression = _toJSON(this.get('nextExpression', null));

            return json;
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new Operator().set('value', value);
        }
    }]);

    return Operator;
}(CSSObject);

var Expression = function (_CSSObject3) {
    _inherits(Expression, _CSSObject3);

    function Expression() {
        _classCallCheck(this, Expression);

        return _possibleConstructorReturn(this, (Expression.__proto__ || Object.getPrototypeOf(Expression)).apply(this, arguments));
    }

    _createClass(Expression, [{
        key: 'getType',
        value: function getType() {
            return 'EXPRESSION';
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                operator: this.get('operator'),
                lhs: _toJSON(this.get('lhs')),
                rhs: _toJSON(this.get('rhs'))
            };
        }
    }], [{
        key: 'create',
        value: function create(operator, lhs, rhs) {
            return new Expression().set('operator', operator).set('lhs', lhs).set('rhs', rhs);
        }
    }]);

    return Expression;
}(CSSObject);

var StringVal = function (_CSSObject4) {
    _inherits(StringVal, _CSSObject4);

    function StringVal() {
        _classCallCheck(this, StringVal);

        return _possibleConstructorReturn(this, (StringVal.__proto__ || Object.getPrototypeOf(StringVal)).apply(this, arguments));
    }

    _createClass(StringVal, [{
        key: 'getType',
        value: function getType() {
            return 'STRING';
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new StringVal().set('value', value);
        }
    }]);

    return StringVal;
}(CSSObject);

var PrimitiveVal = function (_CSSObject5) {
    _inherits(PrimitiveVal, _CSSObject5);

    function PrimitiveVal() {
        _classCallCheck(this, PrimitiveVal);

        return _possibleConstructorReturn(this, (PrimitiveVal.__proto__ || Object.getPrototypeOf(PrimitiveVal)).apply(this, arguments));
    }

    _createClass(PrimitiveVal, [{
        key: 'getType',
        value: function getType() {
            return 'PRIMITIVE_VALUE';
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                value: this.get('value')
            };
        }
    }]);

    return PrimitiveVal;
}(CSSObject);

var NumberVal = function (_PrimitiveVal) {
    _inherits(NumberVal, _PrimitiveVal);

    function NumberVal() {
        _classCallCheck(this, NumberVal);

        return _possibleConstructorReturn(this, (NumberVal.__proto__ || Object.getPrototypeOf(NumberVal)).apply(this, arguments));
    }

    _createClass(NumberVal, [{
        key: 'getType',
        value: function getType() {
            return 'NUMBER';
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new NumberVal().set('value', value);
        }
    }]);

    return NumberVal;
}(PrimitiveVal);

var HashVal = function (_PrimitiveVal2) {
    _inherits(HashVal, _PrimitiveVal2);

    function HashVal() {
        _classCallCheck(this, HashVal);

        return _possibleConstructorReturn(this, (HashVal.__proto__ || Object.getPrototypeOf(HashVal)).apply(this, arguments));
    }

    _createClass(HashVal, [{
        key: 'getType',
        value: function getType() {
            return 'HASH';
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new HashVal().set('value', value);
        }
    }]);

    return HashVal;
}(PrimitiveVal);

var PercentageVal = function (_PrimitiveVal3) {
    _inherits(PercentageVal, _PrimitiveVal3);

    function PercentageVal() {
        _classCallCheck(this, PercentageVal);

        return _possibleConstructorReturn(this, (PercentageVal.__proto__ || Object.getPrototypeOf(PercentageVal)).apply(this, arguments));
    }

    _createClass(PercentageVal, [{
        key: 'getType',
        value: function getType() {
            return 'PERCENTAGE';
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                value: _toJSON(this.get('value')),
                unit: _toJSON(this.get('unit'))
            };
        }
    }], [{
        key: 'create',
        value: function create(value) {
            var result = value.match(/(([\+\-]?[0-9]+(\.[0-9]+)?)|([\+\-]?\.[0-9]+))([%])/);

            return new PercentageVal().set('value', parseFloat(result[1])).set('unit', result[5]);
        }
    }]);

    return PercentageVal;
}(PrimitiveVal);

var DimensionVal = function (_PrimitiveVal4) {
    _inherits(DimensionVal, _PrimitiveVal4);

    function DimensionVal() {
        _classCallCheck(this, DimensionVal);

        return _possibleConstructorReturn(this, (DimensionVal.__proto__ || Object.getPrototypeOf(DimensionVal)).apply(this, arguments));
    }

    _createClass(DimensionVal, [{
        key: 'getType',
        value: function getType() {
            return 'DIMENSION';
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                value: _toJSON(this.get('value')),
                unit: _toJSON(this.get('unit'))
            };
        }
    }], [{
        key: 'create',
        value: function create(value) {
            var result = value.match(/(([\+\-]?[0-9]+(\.[0-9]+)?)|([\+\-]?\.[0-9]+))([a-zA-Z]+)/);

            return new DimensionVal().set('value', parseFloat(result[1])).set('unit', result[5]);
        }
    }]);

    return DimensionVal;
}(PrimitiveVal);

var IdentVal = function (_CSSObject6) {
    _inherits(IdentVal, _CSSObject6);

    function IdentVal() {
        _classCallCheck(this, IdentVal);

        return _possibleConstructorReturn(this, (IdentVal.__proto__ || Object.getPrototypeOf(IdentVal)).apply(this, arguments));
    }

    _createClass(IdentVal, [{
        key: 'getType',
        value: function getType() {
            return 'ID';
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                vendorPrefix: _toJSON(this.get('vendorPrefix', '')),
                value: _toJSON(this.get('value'))
            };
        }
    }], [{
        key: 'create',
        value: function create(value) {
            var result = value.match(/([-](webkit|moz|o|ms)[-])?([0-9a-zA-Z-]*)/);

            return new IdentVal().set('vendorPrefix', result[1]).set('value', result[3]);
        }
    }]);

    return IdentVal;
}(CSSObject);

var UrlVal = function (_CSSObject7) {
    _inherits(UrlVal, _CSSObject7);

    function UrlVal() {
        _classCallCheck(this, UrlVal);

        return _possibleConstructorReturn(this, (UrlVal.__proto__ || Object.getPrototypeOf(UrlVal)).apply(this, arguments));
    }

    _createClass(UrlVal, [{
        key: 'getType',
        value: function getType() {
            return 'URL';
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new UrlVal().set('value', value);
        }
    }]);

    return UrlVal;
}(CSSObject);

var FunctionVal = function (_CSSObject8) {
    _inherits(FunctionVal, _CSSObject8);

    function FunctionVal() {
        _classCallCheck(this, FunctionVal);

        return _possibleConstructorReturn(this, (FunctionVal.__proto__ || Object.getPrototypeOf(FunctionVal)).apply(this, arguments));
    }

    _createClass(FunctionVal, [{
        key: 'getType',
        value: function getType() {
            return 'FUNCTION';
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                name: _toJSON(this.get('name')),
                parameters: _toJSON(this.get('parameters'))
            };
        }
    }], [{
        key: 'create',
        value: function create(name, parameters) {
            return new FunctionVal().set('name', name).set('parameters', parameters);
        }
    }]);

    return FunctionVal;
}(CSSObject);

var SequenceVal = function (_CSSObject9) {
    _inherits(SequenceVal, _CSSObject9);

    function SequenceVal() {
        _classCallCheck(this, SequenceVal);

        return _possibleConstructorReturn(this, (SequenceVal.__proto__ || Object.getPrototypeOf(SequenceVal)).apply(this, arguments));
    }

    _createClass(SequenceVal, [{
        key: 'getType',
        value: function getType() {
            return 'SEQUENCE';
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                value: this.get('value').map(function (o) {
                    return _toJSON(o);
                })
            };
        }
    }], [{
        key: 'create',
        value: function create(list) {
            if (typeof list == 'array' && list.length > 1) {
                return new SequenceVal().set('value', list);
            }

            return list;
        }
    }]);

    return SequenceVal;
}(CSSObject);

var QualifiedRule = function (_CSSObject10) {
    _inherits(QualifiedRule, _CSSObject10);

    function QualifiedRule() {
        _classCallCheck(this, QualifiedRule);

        return _possibleConstructorReturn(this, (QualifiedRule.__proto__ || Object.getPrototypeOf(QualifiedRule)).apply(this, arguments));
    }

    _createClass(QualifiedRule, [{
        key: 'getType',
        value: function getType() {
            return 'QUALIFIED_RULE';
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                selectors: _toJSON(this.get('selectors')),
                value: _toJSON(this.get('value'))
            };
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new QualifiedRule().set('value', value);
        }
    }]);

    return QualifiedRule;
}(CSSObject);

var Declaration = function (_CSSObject11) {
    _inherits(Declaration, _CSSObject11);

    function Declaration() {
        _classCallCheck(this, Declaration);

        return _possibleConstructorReturn(this, (Declaration.__proto__ || Object.getPrototypeOf(Declaration)).apply(this, arguments));
    }

    _createClass(Declaration, [{
        key: 'getType',
        value: function getType() {
            return 'DECLARATION';
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                property: _toJSON(this.get('property')),
                value: _toJSON(this.get('value')),
                important: this.get('important', false),
                ieOnlyHack: _toJSON(this.get('ieOnlyHack', false))
            };
        }
    }], [{
        key: 'create',
        value: function create(property, value) {
            return new Declaration().set('property', property).set('value', value);
        }
    }]);

    return Declaration;
}(CSSObject);

var DeclarationList = function (_CSSObject12) {
    _inherits(DeclarationList, _CSSObject12);

    function DeclarationList() {
        _classCallCheck(this, DeclarationList);

        return _possibleConstructorReturn(this, (DeclarationList.__proto__ || Object.getPrototypeOf(DeclarationList)).apply(this, arguments));
    }

    _createClass(DeclarationList, [{
        key: 'getType',
        value: function getType() {
            return 'DECLARATION_LIST';
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                value: this.get('value').map(function (o) {
                    return _toJSON(o);
                })
            };
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new DeclarationList()
            // force value to array
            .set('value', concat(value, []));
        }
    }]);

    return DeclarationList;
}(CSSObject);

var MediaQueryList = function (_CSSObject13) {
    _inherits(MediaQueryList, _CSSObject13);

    function MediaQueryList() {
        _classCallCheck(this, MediaQueryList);

        return _possibleConstructorReturn(this, (MediaQueryList.__proto__ || Object.getPrototypeOf(MediaQueryList)).apply(this, arguments));
    }

    _createClass(MediaQueryList, [{
        key: 'getType',
        value: function getType() {
            return 'MEDIA_QUERY_LIST';
        }
    }, {
        key: 'add',
        value: function add(mediaQuery) {
            if (!this.value) {
                this.value = [];
            }

            if (mediaQuery) {
                this.value.push(mediaQuery);
            }

            return this;
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                value: this.get('value').map(function (o) {
                    return _toJSON(o);
                })
            };
        }
    }], [{
        key: 'create',
        value: function create() {
            return new MediaQueryList();
        }
    }]);

    return MediaQueryList;
}(CSSObject);

var MediaQuery = function (_CSSObject14) {
    _inherits(MediaQuery, _CSSObject14);

    function MediaQuery() {
        _classCallCheck(this, MediaQuery);

        return _possibleConstructorReturn(this, (MediaQuery.__proto__ || Object.getPrototypeOf(MediaQuery)).apply(this, arguments));
    }

    _createClass(MediaQuery, [{
        key: 'getType',
        value: function getType() {
            return 'MEDIA_QUERY';
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                mediaType: _toJSON(this.get('mediaType', null)),
                prefix: _toJSON(this.get('prefix', null)),
                nextExpression: _toJSON(this.get('nextExpression', null))
            };
        }
    }], [{
        key: 'create',
        value: function create() {
            return new MediaQuery();
        }
    }]);

    return MediaQuery;
}(CSSObject);

var MediaQueryExpression = function (_CSSObject15) {
    _inherits(MediaQueryExpression, _CSSObject15);

    function MediaQueryExpression() {
        _classCallCheck(this, MediaQueryExpression);

        return _possibleConstructorReturn(this, (MediaQueryExpression.__proto__ || Object.getPrototypeOf(MediaQueryExpression)).apply(this, arguments));
    }

    _createClass(MediaQueryExpression, [{
        key: 'getType',
        value: function getType() {
            return 'MEDIA_QUERY_EXPRESSION';
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                feature: _toJSON(this.get('mediaFeature', null)),
                value: _toJSON(this.get('value', null)),
                nextExpression: _toJSON(this.get('nextExpression', null))
            };
        }
    }], [{
        key: 'create',
        value: function create(feature, value) {
            return new MediaQueryExpression().set('mediaFeature', feature).set('value', value);
        }
    }]);

    return MediaQueryExpression;
}(CSSObject);

var Selector = function (_CSSObject16) {
    _inherits(Selector, _CSSObject16);

    function Selector() {
        _classCallCheck(this, Selector);

        return _possibleConstructorReturn(this, (Selector.__proto__ || Object.getPrototypeOf(Selector)).apply(this, arguments));
    }

    _createClass(Selector, [{
        key: 'getType',
        value: function getType() {
            return 'SELECTOR';
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                value: _toJSON(this.get('value')),
                nextSelector: _toJSON(this.get('nextSelector'))
            };
        }
    }]);

    return Selector;
}(CSSObject);

var SelectorList = function (_Selector) {
    _inherits(SelectorList, _Selector);

    function SelectorList() {
        _classCallCheck(this, SelectorList);

        return _possibleConstructorReturn(this, (SelectorList.__proto__ || Object.getPrototypeOf(SelectorList)).apply(this, arguments));
    }

    _createClass(SelectorList, [{
        key: 'getType',
        value: function getType() {
            return 'SELECTOR_LIST';
        }
    }, {
        key: 'add',
        value: function add(rootSelector) {
            if (!this.value) {
                this.value = [];
            }

            this.value.push(rootSelector);

            return this;
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                value: this.get('value').map(function (o) {
                    return _toJSON(o);
                })
            };
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new SelectorList();
        }
    }]);

    return SelectorList;
}(Selector);

var RootSelector = function (_Selector2) {
    _inherits(RootSelector, _Selector2);

    function RootSelector() {
        _classCallCheck(this, RootSelector);

        return _possibleConstructorReturn(this, (RootSelector.__proto__ || Object.getPrototypeOf(RootSelector)).apply(this, arguments));
    }

    _createClass(RootSelector, [{
        key: 'getType',
        value: function getType() {
            return 'SELECTOR_ROOT';
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                value: _toJSON(this.get('value'))
            };
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new RootSelector().set('value', value);
        }
    }]);

    return RootSelector;
}(Selector);

var SelectorCombinator = function (_Selector3) {
    _inherits(SelectorCombinator, _Selector3);

    function SelectorCombinator() {
        _classCallCheck(this, SelectorCombinator);

        return _possibleConstructorReturn(this, (SelectorCombinator.__proto__ || Object.getPrototypeOf(SelectorCombinator)).apply(this, arguments));
    }

    _createClass(SelectorCombinator, [{
        key: 'getType',
        value: function getType() {
            return 'SELECTOR_COMBINATOR';
        }
    }, {
        key: 'getRelation',
        value: function getRelation() {
            return 'UNKNOWN';
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                relation: this.getRelation(),
                value: _toJSON(this.get('value')),
                nextSelector: _toJSON(this.get('nextSelector'))
            };
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new SelectorCombinator().set('value', value);
        }
    }]);

    return SelectorCombinator;
}(Selector);

var DescendantSelectorCombinator = function (_SelectorCombinator) {
    _inherits(DescendantSelectorCombinator, _SelectorCombinator);

    function DescendantSelectorCombinator() {
        _classCallCheck(this, DescendantSelectorCombinator);

        return _possibleConstructorReturn(this, (DescendantSelectorCombinator.__proto__ || Object.getPrototypeOf(DescendantSelectorCombinator)).apply(this, arguments));
    }

    _createClass(DescendantSelectorCombinator, [{
        key: 'getRelation',
        value: function getRelation() {
            return 'DESCEDANT';
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new DescendantSelectorCombinator().set('value', value);
        }
    }]);

    return DescendantSelectorCombinator;
}(SelectorCombinator);

var ChildSelectorCombinator = function (_SelectorCombinator2) {
    _inherits(ChildSelectorCombinator, _SelectorCombinator2);

    function ChildSelectorCombinator() {
        _classCallCheck(this, ChildSelectorCombinator);

        return _possibleConstructorReturn(this, (ChildSelectorCombinator.__proto__ || Object.getPrototypeOf(ChildSelectorCombinator)).apply(this, arguments));
    }

    _createClass(ChildSelectorCombinator, [{
        key: 'getRelation',
        value: function getRelation() {
            return 'CHILD';
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new ChildSelectorCombinator().set('value', value);
        }
    }]);

    return ChildSelectorCombinator;
}(SelectorCombinator);

var AdjacentSiblingSelectorCombinator = function (_SelectorCombinator3) {
    _inherits(AdjacentSiblingSelectorCombinator, _SelectorCombinator3);

    function AdjacentSiblingSelectorCombinator() {
        _classCallCheck(this, AdjacentSiblingSelectorCombinator);

        return _possibleConstructorReturn(this, (AdjacentSiblingSelectorCombinator.__proto__ || Object.getPrototypeOf(AdjacentSiblingSelectorCombinator)).apply(this, arguments));
    }

    _createClass(AdjacentSiblingSelectorCombinator, [{
        key: 'getRelation',
        value: function getRelation() {
            return 'ADJACENT_SIBLING';
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new AdjacentSiblingSelectorCombinator().set('value', value);
        }
    }]);

    return AdjacentSiblingSelectorCombinator;
}(SelectorCombinator);

var SiblingSelectorCombinator = function (_SelectorCombinator4) {
    _inherits(SiblingSelectorCombinator, _SelectorCombinator4);

    function SiblingSelectorCombinator() {
        _classCallCheck(this, SiblingSelectorCombinator);

        return _possibleConstructorReturn(this, (SiblingSelectorCombinator.__proto__ || Object.getPrototypeOf(SiblingSelectorCombinator)).apply(this, arguments));
    }

    _createClass(SiblingSelectorCombinator, [{
        key: 'getRelation',
        value: function getRelation() {
            return 'SIBLING';
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new SiblingSelectorCombinator().set('value', value);
        }
    }]);

    return SiblingSelectorCombinator;
}(SelectorCombinator);

var ClassSelector = function (_Selector4) {
    _inherits(ClassSelector, _Selector4);

    function ClassSelector() {
        _classCallCheck(this, ClassSelector);

        return _possibleConstructorReturn(this, (ClassSelector.__proto__ || Object.getPrototypeOf(ClassSelector)).apply(this, arguments));
    }

    _createClass(ClassSelector, [{
        key: 'getType',
        value: function getType() {
            return 'CLASS_SELECTOR';
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new ClassSelector().set('value', value);
        }
    }]);

    return ClassSelector;
}(Selector);

var TypeSelector = function (_Selector5) {
    _inherits(TypeSelector, _Selector5);

    function TypeSelector() {
        _classCallCheck(this, TypeSelector);

        return _possibleConstructorReturn(this, (TypeSelector.__proto__ || Object.getPrototypeOf(TypeSelector)).apply(this, arguments));
    }

    _createClass(TypeSelector, [{
        key: 'getType',
        value: function getType() {
            return 'TYPE_SELECTOR';
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new TypeSelector().set('value', value);
        }
    }]);

    return TypeSelector;
}(Selector);

var IdSelector = function (_Selector6) {
    _inherits(IdSelector, _Selector6);

    function IdSelector() {
        _classCallCheck(this, IdSelector);

        return _possibleConstructorReturn(this, (IdSelector.__proto__ || Object.getPrototypeOf(IdSelector)).apply(this, arguments));
    }

    _createClass(IdSelector, [{
        key: 'getType',
        value: function getType() {
            return 'ID_SELECTOR';
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new IdSelector().set('value', value);
        }
    }]);

    return IdSelector;
}(Selector);

var UniversalSelector = function (_Selector7) {
    _inherits(UniversalSelector, _Selector7);

    function UniversalSelector() {
        _classCallCheck(this, UniversalSelector);

        return _possibleConstructorReturn(this, (UniversalSelector.__proto__ || Object.getPrototypeOf(UniversalSelector)).apply(this, arguments));
    }

    _createClass(UniversalSelector, [{
        key: 'getType',
        value: function getType() {
            return 'UNIVERSAL_SELECTOR';
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new UniversalSelector().set('value', value);
        }
    }]);

    return UniversalSelector;
}(Selector);

var PseudoClassSelector = function (_Selector8) {
    _inherits(PseudoClassSelector, _Selector8);

    function PseudoClassSelector() {
        _classCallCheck(this, PseudoClassSelector);

        return _possibleConstructorReturn(this, (PseudoClassSelector.__proto__ || Object.getPrototypeOf(PseudoClassSelector)).apply(this, arguments));
    }

    _createClass(PseudoClassSelector, [{
        key: 'getType',
        value: function getType() {
            return 'PSEUDO_CLASS_SELECTOR';
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new PseudoClassSelector().set('value', value);
        }
    }]);

    return PseudoClassSelector;
}(Selector);

var PseudoElementSelector = function (_Selector9) {
    _inherits(PseudoElementSelector, _Selector9);

    function PseudoElementSelector() {
        _classCallCheck(this, PseudoElementSelector);

        return _possibleConstructorReturn(this, (PseudoElementSelector.__proto__ || Object.getPrototypeOf(PseudoElementSelector)).apply(this, arguments));
    }

    _createClass(PseudoElementSelector, [{
        key: 'getType',
        value: function getType() {
            return 'PSEUDO_ELEMENT_SELECTOR';
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new PseudoElementSelector().set('value', value);
        }
    }]);

    return PseudoElementSelector;
}(Selector);

var AttributeSelector = function (_Selector10) {
    _inherits(AttributeSelector, _Selector10);

    function AttributeSelector() {
        _classCallCheck(this, AttributeSelector);

        return _possibleConstructorReturn(this, (AttributeSelector.__proto__ || Object.getPrototypeOf(AttributeSelector)).apply(this, arguments));
    }

    _createClass(AttributeSelector, [{
        key: 'getType',
        value: function getType() {
            return 'ATTRIBUTE_SELECTOR';
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new AttributeSelector().set('value', value);
        }
    }]);

    return AttributeSelector;
}(Selector);

var AtRule = function (_CSSObject17) {
    _inherits(AtRule, _CSSObject17);

    function AtRule() {
        _classCallCheck(this, AtRule);

        return _possibleConstructorReturn(this, (AtRule.__proto__ || Object.getPrototypeOf(AtRule)).apply(this, arguments));
    }

    _createClass(AtRule, [{
        key: 'getType',
        value: function getType() {
            return 'AT_RULE';
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                rule: _toJSON(this.get('rule', null)),
                value: _toJSON(this.get('value', null))
            };
        }
    }]);

    return AtRule;
}(CSSObject);

var AtCharset = function (_AtRule) {
    _inherits(AtCharset, _AtRule);

    function AtCharset() {
        _classCallCheck(this, AtCharset);

        return _possibleConstructorReturn(this, (AtCharset.__proto__ || Object.getPrototypeOf(AtCharset)).apply(this, arguments));
    }

    _createClass(AtCharset, null, [{
        key: 'create',
        value: function create(rule) {
            return new AtCharset().set('rule', rule);
        }
    }]);

    return AtCharset;
}(AtRule);

var AtImport = function (_AtRule2) {
    _inherits(AtImport, _AtRule2);

    function AtImport() {
        _classCallCheck(this, AtImport);

        return _possibleConstructorReturn(this, (AtImport.__proto__ || Object.getPrototypeOf(AtImport)).apply(this, arguments));
    }

    _createClass(AtImport, [{
        key: 'toJSON',
        value: function toJSON() {
            var json = _get(AtImport.prototype.__proto__ || Object.getPrototypeOf(AtImport.prototype), 'toJSON', this).call(this);
            json.nextExpression = _toJSON(this.get('nextExpression', null));

            return json;
        }
    }], [{
        key: 'create',
        value: function create(rule) {
            return new AtImport().set('rule', rule);
        }
    }]);

    return AtImport;
}(AtRule);

var AtNamespace = function (_AtRule3) {
    _inherits(AtNamespace, _AtRule3);

    function AtNamespace() {
        _classCallCheck(this, AtNamespace);

        return _possibleConstructorReturn(this, (AtNamespace.__proto__ || Object.getPrototypeOf(AtNamespace)).apply(this, arguments));
    }

    _createClass(AtNamespace, [{
        key: 'toJSON',
        value: function toJSON() {
            var json = _get(AtNamespace.prototype.__proto__ || Object.getPrototypeOf(AtNamespace.prototype), 'toJSON', this).call(this);
            json.prefix = _toJSON(this.get('prefix', null));

            return json;
        }
    }], [{
        key: 'create',
        value: function create(rule) {
            return new AtNamespace().set('rule', rule);
        }
    }]);

    return AtNamespace;
}(AtRule);

var AtFontface = function (_AtRule4) {
    _inherits(AtFontface, _AtRule4);

    function AtFontface() {
        _classCallCheck(this, AtFontface);

        return _possibleConstructorReturn(this, (AtFontface.__proto__ || Object.getPrototypeOf(AtFontface)).apply(this, arguments));
    }

    _createClass(AtFontface, null, [{
        key: 'create',
        value: function create(rule) {
            return new AtFontface().set('rule', rule);
        }
    }]);

    return AtFontface;
}(AtRule);

var AtNestedRule = function (_AtRule5) {
    _inherits(AtNestedRule, _AtRule5);

    function AtNestedRule() {
        _classCallCheck(this, AtNestedRule);

        return _possibleConstructorReturn(this, (AtNestedRule.__proto__ || Object.getPrototypeOf(AtNestedRule)).apply(this, arguments));
    }

    _createClass(AtNestedRule, [{
        key: 'toJSON',
        value: function toJSON() {
            var json = _get(AtNestedRule.prototype.__proto__ || Object.getPrototypeOf(AtNestedRule.prototype), 'toJSON', this).call(this);
            json.nestedRules = _toJSON(this.get('nestedRules', null));

            return json;
        }
    }]);

    return AtNestedRule;
}(AtRule);

var AtMedia = function (_AtNestedRule) {
    _inherits(AtMedia, _AtNestedRule);

    function AtMedia() {
        _classCallCheck(this, AtMedia);

        return _possibleConstructorReturn(this, (AtMedia.__proto__ || Object.getPrototypeOf(AtMedia)).apply(this, arguments));
    }

    _createClass(AtMedia, null, [{
        key: 'create',
        value: function create(rule) {
            return new AtMedia().set('rule', rule);
        }
    }]);

    return AtMedia;
}(AtNestedRule);

var AtKeyframes = function (_CSSObject18) {
    _inherits(AtKeyframes, _CSSObject18);

    function AtKeyframes() {
        _classCallCheck(this, AtKeyframes);

        return _possibleConstructorReturn(this, (AtKeyframes.__proto__ || Object.getPrototypeOf(AtKeyframes)).apply(this, arguments));
    }

    _createClass(AtKeyframes, [{
        key: 'toJSON',
        value: function toJSON() {
            var json = _get(AtKeyframes.prototype.__proto__ || Object.getPrototypeOf(AtKeyframes.prototype), 'toJSON', this).call(this);

            json.name = _toJSON(this.get('name'));
        }
    }], [{
        key: 'create',
        value: function create(rule) {
            return new AtKeyframes().set('rule', rule);
        }
    }]);

    return AtKeyframes;
}(CSSObject);

var AtKeyframesBlockList = function (_CSSObject19) {
    _inherits(AtKeyframesBlockList, _CSSObject19);

    function AtKeyframesBlockList() {
        _classCallCheck(this, AtKeyframesBlockList);

        return _possibleConstructorReturn(this, (AtKeyframesBlockList.__proto__ || Object.getPrototypeOf(AtKeyframesBlockList)).apply(this, arguments));
    }

    _createClass(AtKeyframesBlockList, [{
        key: 'getType',
        value: function getType(type) {
            return 'KEYFRAME_BLOCK_LIST';
        }
    }, {
        key: 'add',
        value: function add(block) {
            if (!this.value) {
                this.value = [];
            }

            this.value.push(block);

            return this;
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                value: this.get('value', []).map(function (o) {
                    return _toJSON(o);
                })
            };
        }
    }], [{
        key: 'create',
        value: function create(selector) {
            return new AtKeyframesBlockList();
        }
    }]);

    return AtKeyframesBlockList;
}(CSSObject);

var AtKeyframesBlock = function (_CSSObject20) {
    _inherits(AtKeyframesBlock, _CSSObject20);

    function AtKeyframesBlock() {
        _classCallCheck(this, AtKeyframesBlock);

        return _possibleConstructorReturn(this, (AtKeyframesBlock.__proto__ || Object.getPrototypeOf(AtKeyframesBlock)).apply(this, arguments));
    }

    _createClass(AtKeyframesBlock, [{
        key: 'getType',
        value: function getType(type) {
            return 'KEYFRAME_BLOCK';
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            var json = _get(AtKeyframesBlock.prototype.__proto__ || Object.getPrototypeOf(AtKeyframesBlock.prototype), 'toJSON', this).call(this);
            json.selector = _toJSON(this.get('selector', null));

            return json;
        }
    }], [{
        key: 'create',
        value: function create(selector) {
            return new AtKeyframesBlock().set('selector', selector);
        }
    }]);

    return AtKeyframesBlock;
}(CSSObject);

var AtSupport = function (_AtNestedRule2) {
    _inherits(AtSupport, _AtNestedRule2);

    function AtSupport() {
        _classCallCheck(this, AtSupport);

        return _possibleConstructorReturn(this, (AtSupport.__proto__ || Object.getPrototypeOf(AtSupport)).apply(this, arguments));
    }

    _createClass(AtSupport, [{
        key: 'toJSON',
        value: function toJSON() {
            var json = _get(AtSupport.prototype.__proto__ || Object.getPrototypeOf(AtSupport.prototype), 'toJSON', this).call(this);
            json.property = _toJSON(this.get('property', null));
            json.operator = _toJSON(this.get('operator', null));

            return json;
        }
    }], [{
        key: 'create',
        value: function create(rule) {
            return new AtSupport().set('rule', rule);
        }
    }]);

    return AtSupport;
}(AtNestedRule);

var AtSupportExpression = function (_CSSObject21) {
    _inherits(AtSupportExpression, _CSSObject21);

    function AtSupportExpression() {
        _classCallCheck(this, AtSupportExpression);

        return _possibleConstructorReturn(this, (AtSupportExpression.__proto__ || Object.getPrototypeOf(AtSupportExpression)).apply(this, arguments));
    }

    _createClass(AtSupportExpression, [{
        key: 'getType',
        value: function getType(type) {
            return 'SUPPORT_EXPRESSION';
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            var json = _get(AtSupportExpression.prototype.__proto__ || Object.getPrototypeOf(AtSupportExpression.prototype), 'toJSON', this).call(this);
            json.property = _toJSON(this.get('property', null));
            json.operator = _toJSON(this.get('operator', null));
            json.nextExpression = _toJSON(this.get('nextExpression', null));

            return json;
        }
    }], [{
        key: 'create',
        value: function create(selector) {
            return new AtSupportExpression();
        }
    }]);

    return AtSupportExpression;
}(CSSObject);

var AtPage = function (_AtNestedRule3) {
    _inherits(AtPage, _AtNestedRule3);

    function AtPage() {
        _classCallCheck(this, AtPage);

        return _possibleConstructorReturn(this, (AtPage.__proto__ || Object.getPrototypeOf(AtPage)).apply(this, arguments));
    }

    _createClass(AtPage, null, [{
        key: 'create',
        value: function create(rule) {
            return new AtPage().set('rule', rule);
        }
    }]);

    return AtPage;
}(AtNestedRule);

var AtDocument = function (_AtNestedRule4) {
    _inherits(AtDocument, _AtNestedRule4);

    function AtDocument() {
        _classCallCheck(this, AtDocument);

        return _possibleConstructorReturn(this, (AtDocument.__proto__ || Object.getPrototypeOf(AtDocument)).apply(this, arguments));
    }

    _createClass(AtDocument, null, [{
        key: 'create',
        value: function create(rule) {
            return new AtDocument().set('rule', rule);
        }
    }]);

    return AtDocument;
}(AtNestedRule);
/* generated by jison-lex 0.3.4 */
var lexer = (function(){
var lexer = ({

EOF:1,

parseError:function parseError(str, hash) {
        if (this.yy.parser) {
            this.yy.parser.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },

// resets the lexer, sets new input
setInput:function (input, yy) {
        this.yy = yy || this.yy || {};
        this._input = input;
        this._more = this._backtrack = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {
            first_line: 1,
            first_column: 0,
            last_line: 1,
            last_column: 0
        };
        if (this.options.ranges) {
            this.yylloc.range = [0,0];
        }
        this.offset = 0;
        return this;
    },

// consumes and returns one char from the input
input:function () {
        var ch = this._input[0];
        this.yytext += ch;
        this.yyleng++;
        this.offset++;
        this.match += ch;
        this.matched += ch;
        var lines = ch.match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno++;
            this.yylloc.last_line++;
        } else {
            this.yylloc.last_column++;
        }
        if (this.options.ranges) {
            this.yylloc.range[1]++;
        }

        this._input = this._input.slice(1);
        return ch;
    },

// unshifts one char (or a string) into the input
unput:function (ch) {
        var len = ch.length;
        var lines = ch.split(/(?:\r\n?|\n)/g);

        this._input = ch + this._input;
        this.yytext = this.yytext.substr(0, this.yytext.length - len);
        //this.yyleng -= len;
        this.offset -= len;
        var oldLines = this.match.split(/(?:\r\n?|\n)/g);
        this.match = this.match.substr(0, this.match.length - 1);
        this.matched = this.matched.substr(0, this.matched.length - 1);

        if (lines.length - 1) {
            this.yylineno -= lines.length - 1;
        }
        var r = this.yylloc.range;

        this.yylloc = {
            first_line: this.yylloc.first_line,
            last_line: this.yylineno + 1,
            first_column: this.yylloc.first_column,
            last_column: lines ?
                (lines.length === oldLines.length ? this.yylloc.first_column : 0)
                 + oldLines[oldLines.length - lines.length].length - lines[0].length :
              this.yylloc.first_column - len
        };

        if (this.options.ranges) {
            this.yylloc.range = [r[0], r[0] + this.yyleng - len];
        }
        this.yyleng = this.yytext.length;
        return this;
    },

// When called from action, caches matched text and appends it on next action
more:function () {
        this._more = true;
        return this;
    },

// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.
reject:function () {
        if (this.options.backtrack_lexer) {
            this._backtrack = true;
        } else {
            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n' + this.showPosition(), {
                text: "",
                token: null,
                line: this.yylineno
            });

        }
        return this;
    },

// retain first n characters of the match
less:function (n) {
        this.unput(this.match.slice(n));
    },

// displays already matched input, i.e. for error messages
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },

// displays upcoming input, i.e. for error messages
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\n/g, "");
    },

// displays the character position where the lexing error occurred, i.e. for error messages
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c + "^";
    },

// test the lexed token: return FALSE when not a match, otherwise return token
test_match:function (match, indexed_rule) {
        var token,
            lines,
            backup;

        if (this.options.backtrack_lexer) {
            // save context
            backup = {
                yylineno: this.yylineno,
                yylloc: {
                    first_line: this.yylloc.first_line,
                    last_line: this.last_line,
                    first_column: this.yylloc.first_column,
                    last_column: this.yylloc.last_column
                },
                yytext: this.yytext,
                match: this.match,
                matches: this.matches,
                matched: this.matched,
                yyleng: this.yyleng,
                offset: this.offset,
                _more: this._more,
                _input: this._input,
                yy: this.yy,
                conditionStack: this.conditionStack.slice(0),
                done: this.done
            };
            if (this.options.ranges) {
                backup.yylloc.range = this.yylloc.range.slice(0);
            }
        }

        lines = match[0].match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno += lines.length;
        }
        this.yylloc = {
            first_line: this.yylloc.last_line,
            last_line: this.yylineno + 1,
            first_column: this.yylloc.last_column,
            last_column: lines ?
                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\r?\n?/)[0].length :
                         this.yylloc.last_column + match[0].length
        };
        this.yytext += match[0];
        this.match += match[0];
        this.matches = match;
        this.yyleng = this.yytext.length;
        if (this.options.ranges) {
            this.yylloc.range = [this.offset, this.offset += this.yyleng];
        }
        this._more = false;
        this._backtrack = false;
        this._input = this._input.slice(match[0].length);
        this.matched += match[0];
        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);
        if (this.done && this._input) {
            this.done = false;
        }
        if (token) {
            return token;
        } else if (this._backtrack) {
            // recover context
            for (var k in backup) {
                this[k] = backup[k];
            }
            return false; // rule action called reject() implying the next rule should be tested instead.
        }
        return false;
    },

// return next match in input
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) {
            this.done = true;
        }

        var token,
            match,
            tempMatch,
            index;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i = 0; i < rules.length; i++) {
            tempMatch = this._input.match(this.rules[rules[i]]);
            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                match = tempMatch;
                index = i;
                if (this.options.backtrack_lexer) {
                    token = this.test_match(tempMatch, rules[i]);
                    if (token !== false) {
                        return token;
                    } else if (this._backtrack) {
                        match = false;
                        continue; // rule action called reject() implying a rule MISmatch.
                    } else {
                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
                        return false;
                    }
                } else if (!this.options.flex) {
                    break;
                }
            }
        }
        if (match) {
            token = this.test_match(match, rules[index]);
            if (token !== false) {
                return token;
            }
            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
            return false;
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\n' + this.showPosition(), {
                text: "",
                token: null,
                line: this.yylineno
            });
        }
    },

// return next match that has a token
lex:function lex() {
        var r = this.next();
        if (r) {
            return r;
        } else {
            return this.lex();
        }
    },

// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)
begin:function begin(condition) {
        this.conditionStack.push(condition);
    },

// pop the previously active lexer condition state off the condition stack
popState:function popState() {
        var n = this.conditionStack.length - 1;
        if (n > 0) {
            return this.conditionStack.pop();
        } else {
            return this.conditionStack[0];
        }
    },

// produce the lexer rule set which is active for the currently active lexer condition state
_currentRules:function _currentRules() {
        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {
            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;
        } else {
            return this.conditions["INITIAL"].rules;
        }
    },

// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available
topState:function topState(n) {
        n = this.conditionStack.length - 1 - Math.abs(n || 0);
        if (n >= 0) {
            return this.conditionStack[n];
        } else {
            return "INITIAL";
        }
    },

// alias for begin(condition)
pushState:function pushState(condition) {
        this.begin(condition);
    },

// return the number of states currently on the stack
stateStackSize:function stateStackSize() {
        return this.conditionStack.length;
    },
options: {},
performAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {
var YYSTATE=YY_START;
switch($avoiding_name_collisions) {
case 0:function _token(tok) { /*console.log(tok);*/ return tok; }
break;
case 1:
break;
case 2:
break;
case 3:return _token('VENDOR_PREFIX_IDENT');
break;
case 4:return _token('CALC_FUNC');
break;
case 5:return _token('URL_FUNC');
break;
case 6:return _token('URL_PREFIX_FUNC');
break;
case 7:return _token('DOMAIN_FUNC');
break;
case 8:return _token('REGEXP_FUNC');
break;
case 9:return _token('AT_CHARSET');
break;
case 10:return _token('AT_IMPORT');
break;
case 11:return _token('AT_NAMESPACE');
break;
case 12:return _token('AT_MEDIA');
break;
case 13:return _token('AT_DOCUMENT');
break;
case 14:return _token('AT_PAGE');
break;
case 15:return _token('AT_SUPPORTS');
break;
case 16:return _token('AT_FONT_FACE');
break;
case 17:return _token('AT_VIEWPORT');
break;
case 18:return _token('AT_COUNTER_STYLE');
break;
case 19:return _token('AT_FONT_FEATURE_VALUES');
break;
case 20:return _token('AT_KEYFRAMES');
break;
case 21:return _token('AT_KEYWORD');
break;
case 22:return _token('SELECTOR_CLASS_WITH_WHITESPACE');
break;
case 23:return _token('SELECTOR_ID_WITH_WHITESPACE');
break;
case 24:return _token('HASH_STRING');
break;
case 25:return _token('HEXA_NUMBER');
break;
case 26:return _token('DIMENSION');
break;
case 27:return _token('PERCENTAGE');
break;
case 28:return _token('NUMBER');
break;
case 29:return _token('UNICODE_RANGE');
break;
case 30:return _token('GENERAL_IDENT');
break;
case 31:return _token('INCLUDE_MATCH');
break;
case 32:return _token('DASH_MATCH');
break;
case 33:return _token('PREFIX_MATCH');
break;
case 34:return _token('SUFFIX_MATCH');
break;
case 35:return _token('SUBSTRING_MATCH');
break;
case 36:return _token('COLUMN');
break;
case 37:return _token('CDO');
break;
case 38:return _token('CDC');
break;
case 39:return _token('ASSIGN_MARK');
break;
case 40:return _token('NUMBER_SIGN');
break;
case 41:return _token('DOLLAR_SIGN');
break;
case 42:return _token('APOSTROPHE');
break;
case 43:return _token('LEFT_PARENTHESIS');
break;
case 44:return _token('RIGHT_PARENTHESIS');
break;
case 45:return _token('ASTERISK_WITH_WHITESPACE');
break;
case 46:return _token('ASTERISK');
break;
case 47:return _token('PLUS_SIGN');
break;
case 48:return _token('COMMA');
break;
case 49:return _token('HYPHEN_MINUS');
break;
case 50:return _token('FULL_STOP');
break;
case 51:return _token('SOLIDUS');
break;
case 52:return _token('COLON');
break;
case 53:return _token('SEMICOLON');
break;
case 54:return _token('LESS_THAN_SIGN');
break;
case 55:return _token('GREATER_THAN_SIGN');
break;
case 56:return _token('COMMERCIAL_AT');
break;
case 57:return _token('LEFT_SQUARE_BRACKET');
break;
case 58:return _token('REVERSE_SOLIDUS');
break;
case 59:return _token('RIGHT_SQUARE_BRACKET');
break;
case 60:return _token('CIRCUMFLEX_ACCENT');
break;
case 61:return _token('LEFT_CURLY_BRACKET');
break;
case 62:return _token('RIGHT_CURLY_BRACKET');
break;
case 63:return _token('VERTICAL_LINE ');
break;
case 64:return _token('TILDE');
break;
case 65:return _token('GENERAL_IDENT');
break;
case 66:return _token('GENERAL_IDENT');
break;
case 67:return _token('GENERAL_IDENT');
break;
case 68:return _token('OPERATOR_AND');
break;
case 69:return _token('OPERATOR_OR');
break;
case 70:return _token('OPERATOR_ONLY');
break;
case 71:return _token('OPERATOR_NOT');
break;
case 72:return _token('STRING');
break;
case 73:return _token('GENERAL_IDENT');
break;
case 74:return _token('N');
break;
case 75:return _token('SELECTOR_TYPE_WITH_WHITESPACE');
break;
case 76:return _token('GENERAL_IDENT');
break;
case 77:return _token('IMPORTANT');
break;
case 78:return _token('EOF');
break;
case 79:return _token(yy_.yytext);
break;
}
},
rules: [/^(?:{hack})/,/^(?:\/\*[^*]*\*+([^\/][^*]*\*+)*\/)/,/^(?:(\s)+)/,/^(?:([-](webkit|moz|o|ms\b)[-])([-]?([a-zA-Z]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))([_]|([a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377])))*))/,/^(?:calc\()/,/^(?:url(\(((\s))*((([!#$%&*-~]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))*)|(("([\t !#$%&(-~]|\\{nl}|'|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))*")|('([\t !#$%&(-~]|\\{nl}|"|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))*')))((\s))*\)))/,/^(?:url-prefix(\(((\s))*((([!#$%&*-~]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))*)|(("([\t !#$%&(-~]|\\{nl}|'|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))*")|('([\t !#$%&(-~]|\\{nl}|"|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))*')))((\s))*\)))/,/^(?:domain(\(((\s))*((([!#$%&*-~]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))*)|(("([\t !#$%&(-~]|\\{nl}|'|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))*")|('([\t !#$%&(-~]|\\{nl}|"|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))*')))((\s))*\)))/,/^(?:regexp\(((\s))*(("([\t !#$%&(-~]|\\{nl}|'|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))*")|('([\t !#$%&(-~]|\\{nl}|"|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))*'))((\s))*\))/,/^(?:@charset\b)/,/^(?:@import\b)/,/^(?:@namespace\b)/,/^(?:@media\b)/,/^(?:@document\b)/,/^(?:@page\b)/,/^(?:@supports\b)/,/^(?:@font-face\b)/,/^(?:@viewport\b)/,/^(?:@counter-style\b)/,/^(?:@font-feature-values\b)/,/^(?:@([-](webkit|moz|o|ms\b)[-])?keyframes\b)/,/^(?:[@]([-]?([a-zA-Z]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))([_]|([a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377])))*))/,/^(?:[.]([-]?([a-zA-Z]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))([_]|([a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377])))*)(\s)+)/,/^(?:[#]([-]?([a-zA-Z]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))([_]|([a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377])))*)(\s)+)/,/^(?:[#]([-]?([a-zA-Z]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))([_]|([a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377])))*))/,/^(?:[#]([0-9a-fA-F])+)/,/^(?:(([\+\-]?[0-9]+(\.[0-9]+)?)|([\+\-]?\.[0-9]+))([a-zA-Z])+)/,/^(?:(([\+\-]?[0-9]+(\.[0-9]+)?)|([\+\-]?\.[0-9]+))%)/,/^(?:(([\+\-]?[0-9]+(\.[0-9]+)?)|([\+\-]?\.[0-9]+)))/,/^(?:[Uu]\+(\?{1,6}|{h}(\?{0,5}|{h}(\?{0,4}|{h}(\?{0,3}|{h}(\?{0,2}|{h}(\??|{h})))))))/,/^(?:-([-]?([a-zA-Z]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))([_]|([a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377])))*))/,/^(?:~=)/,/^(?:\|=)/,/^(?:\^=)/,/^(?:\$=)/,/^(?:\*=)/,/^(?:\|\|)/,/^(?:<!--)/,/^(?:-->)/,/^(?:=)/,/^(?:#)/,/^(?:\$)/,/^(?:‘)/,/^(?:\()/,/^(?:\))/,/^(?:[*](\s)+)/,/^(?:[*])/,/^(?:\+)/,/^(?:,)/,/^(?:-)/,/^(?:\.)/,/^(?:\/)/,/^(?::)/,/^(?:;)/,/^(?:<)/,/^(?:>)/,/^(?:@)/,/^(?:\[)/,/^(?:\\)/,/^(?:\])/,/^(?:\^)/,/^(?:\{)/,/^(?:\})/,/^(?:\|)/,/^(?:~)/,/^(?:((and\b)|(or\b)|(only\b)|(not\b))([_]|([a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377])))+)/,/^(?:{media_type}([_]|([a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377])))+)/,/^(?:{media_feature}([_]|([a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377])))+)/,/^(?:(and\b))/,/^(?:(or\b))/,/^(?:(only\b))/,/^(?:(not\b))/,/^(?:(("([\t !#$%&(-~]|\\{nl}|'|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))*")|('([\t !#$%&(-~]|\\{nl}|"|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))*')))/,/^(?:n([-]?([a-zA-Z]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))([_]|([a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377])))*))/,/^(?:n\b)/,/^(?:([-]?([a-zA-Z]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))([_]|([a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377])))*)(\s)+)/,/^(?:([-]?([a-zA-Z]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))([_]|([a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377])))*))/,/^(?:!important\b)/,/^(?:$)/,/^(?:.)/],
conditions: {"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"inclusive":true}}
});
return lexer;
})();
parser.lexer = lexer;
function Parser () {
  this.yy = {};
}
Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();


if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = cssparser;
exports.Parser = cssparser.Parser;
exports.parse = function () { return cssparser.parse.apply(cssparser, arguments); };
exports.main = function commonjsMain(args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}