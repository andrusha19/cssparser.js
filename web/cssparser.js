/* parser generated by jison 0.4.17 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var cssparser = (function(){
var o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,4],$V1=[1,5],$V2=[1,22],$V3=[1,23],$V4=[1,24],$V5=[1,41],$V6=[1,28],$V7=[1,44],$V8=[1,42],$V9=[1,19],$Va=[1,43],$Vb=[1,51],$Vc=[1,45],$Vd=[1,37],$Ve=[1,48],$Vf=[1,49],$Vg=[1,47],$Vh=[1,46],$Vi=[1,38],$Vj=[1,39],$Vk=[1,40],$Vl=[1,50],$Vm=[5,7,8,20,22,25,34,37,46,48,56,57,68,72,73,119,120,121,122,123,124,125,126],$Vn=[1,56],$Vo=[5,7,8,20,22,25,34,36,37,46,48,56,57,68,72,73,119,120,121,122,123,124,125,126],$Vp=[35,51],$Vq=[35,51,70],$Vr=[1,64],$Vs=[1,63],$Vt=[1,65],$Vu=[1,69],$Vv=[1,73],$Vw=[1,76],$Vx=[1,78],$Vy=[1,77],$Vz=[35,51,68,70,72,73,89,110,111,119,120,121,122,123,124,125,126],$VA=[1,91],$VB=[1,93],$VC=[1,90],$VD=[1,96],$VE=[1,97],$VF=[1,98],$VG=[1,99],$VH=[1,103],$VI=[1,104],$VJ=[1,107],$VK=[1,118],$VL=[1,125],$VM=[1,126],$VN=[68,72,73,119,120,121,122,123,124,125,126],$VO=[14,63,66,97,121,123,147],$VP=[14,35,36,51,52,63,64,66,68,70,72,73,86,87,89,90,91,105,110,111,119,120,121,122,123,124,125,126,128,129,130,131,132,133,138,139,141,143,147],$VQ=[1,137],$VR=[1,141],$VS=[35,121,123,143,147],$VT=[2,178],$VU=[14,35],$VV=[14,35,51],$VW=[1,145],$VX=[121,123,147],$VY=[35,64,65],$VZ=[35,68],$V_=[1,167],$V$=[5,7,8,20,22,25,34,35,36,37,46,48,56,57,68,72,73,119,120,121,122,123,124,125,126,143,147],$V01=[20,22,25,34,36,37,46,48,56,57,68,72,73,119,120,121,122,123,124,125,126],$V11=[14,35,51,64],$V21=[63,66],$V31=[1,209],$V41=[1,210],$V51=[1,205],$V61=[52,121,123,138,139,141,143,146,147],$V71=[52,63,68,70,72,73,87,90,119,120,121,122,123,124,125,126,137,138,139,141,143,147],$V81=[1,232],$V91=[1,229],$Va1=[1,230],$Vb1=[1,231],$Vc1=[35,36,121,123,143,147],$Vd1=[70,128],$Ve1=[14,36,51,52,63,70,72,73,87,89,90,91,105,119,120,121,123,125,128,138,139,141,143,147],$Vf1=[14,36],$Vg1=[14,36,51,105],$Vh1=[1,245],$Vi1=[1,246],$Vj1=[1,247],$Vk1=[1,248],$Vl1=[1,249],$Vm1=[14,36,51,52,63,70,72,73,87,89,90,91,105,119,120,121,123,125,138,139,141,143,147],$Vn1=[52,63,87,119,120,121,123,125,138,139,141,143,147],$Vo1=[51,70],$Vp1=[70,72,73,89,90,91];
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"stylesheet":3,"stylesheet_list":4,"EOF":5,"stylesheet_component":6,"CDO":7,"CDC":8,"QualifiedRule":9,"at_rule":10,"rule_list":11,"rule_list_component":12,"at_rule_simple":13,"SEMICOLON":14,"at_rule_nested":15,"at_rule_font_face":16,"at_rule_charset":17,"at_rule_import":18,"at_rule_namespace":19,"AT_CHARSET":20,"StringVal":21,"AT_IMPORT":22,"UrlOrStringVal":23,"MediaQueryList":24,"AT_NAMESPACE":25,"IDENT":26,"at_rule_nested_frontpart":27,"rule_block":28,"at_rule_keyframes":29,"at_rule_page":30,"at_rule_media":31,"at_rule_document":32,"at_rule_supports":33,"AT_MEDIA":34,"LEFT_CURLY_BRACKET":35,"RIGHT_CURLY_BRACKET":36,"AT_KEYFRAMES":37,"keyframes_name":38,"keyframes_block":39,"keyframes_block_list":40,"keyframes_selector":41,"DeclarationList":42,"IdentVal":43,"PercentageVal":44,"at_rule_page_frontpart":45,"AT_PAGE":46,"SelectorPseudoClassList":47,"AT_DOCUMENT":48,"AtDocumentFuncValList":49,"AtDocumentFuncVal":50,"COMMA":51,"URL_FUNC":52,"URL_PREFIX_FUNC":53,"DOMAIN_FUNC":54,"REGEXP_FUNC":55,"AT_FONT_FACE":56,"AT_SUPPORTS":57,"supports_expression_list":58,"supports_expression":59,"supports_and_or_expression":60,"OperatorAndOr":61,"supports_expression_body":62,"OPERATOR_NOT":63,"OPERATOR_AND":64,"OPERATOR_OR":65,"LEFT_PARENTHESIS":66,"ComponentName":67,"COLON":68,"DeclarationPropValList":69,"RIGHT_PARENTHESIS":70,"PropertyName":71,"ASTERISK":72,"ASTERISK_WITH_WHITESPACE":73,"PropertyValue":74,"PropertyValueItemSequence":75,"PropertyValueItem":76,"GenericPropertyValueItem":77,"CalcOperator":78,"UrlVal":79,"FunctionVal":80,"GenericNumericVal":81,"HashVal":82,"CalcFunction":83,"FUNCTION":84,"FunctionParameters":85,"ASSIGN_MARK":86,"CALC_FUNC":87,"CalcExpression":88,"PLUS_SIGN":89,"HYPHEN_MINUS":90,"SOLIDUS":91,"MediaQueryGroup":92,"MediaQuery":93,"MediaQueryAndExpressionList":94,"OnlyNot":95,"MediaQueryExpressionList":96,"OPERATOR_ONLY":97,"MediaQueryExpression":98,"MediaQueryAndExpression":99,"MediaFeature":100,"GenericVal":101,"SelectorList":102,"Declaration":103,"DeclarationComponent":104,"IMPORTANT":105,"SelectorGroup":106,"Selector":107,"SelectorCombinator":108,"DescendantSelector":109,"GREATER_THAN_SIGN":110,"TILDE":111,"UniversalSelector":112,"ClassSelector":113,"TypeSelector":114,"IdSelector":115,"SelectorAttr":116,"SelectorPseudoClass":117,"SelectorPseudoElement":118,"HASH_STRING":119,"HEXA_NUMBER":120,"GENERAL_IDENT":121,"FULL_STOP":122,"SELECTOR_TYPE_WITH_WHITESPACE":123,"SELECTOR_CLASS_WITH_WHITESPACE":124,"SELECTOR_ID_WITH_WHITESPACE":125,"LEFT_SQUARE_BRACKET":126,"SelectorAttrOperator":127,"RIGHT_SQUARE_BRACKET":128,"INCLUDE_MATCH":129,"DASH_MATCH":130,"PREFIX_MATCH":131,"SUFFIX_MATCH":132,"SUBSTRING_MATCH":133,"PseudoClassFunc":134,"PseudoClassFuncParam":135,"PseudoClassFuncParam_an_plus_b":136,"N":137,"NUMBER":138,"DIMENSION":139,"NumberVal":140,"STRING":141,"DimensionVal":142,"PERCENTAGE":143,"IdOrUrlOrStringVal":144,"NumericVal":145,"HexaNumericVal":146,"VENDOR_PREFIX_IDENT":147,"$accept":0,"$end":1},
terminals_: {2:"error",5:"EOF",7:"CDO",8:"CDC",14:"SEMICOLON",20:"AT_CHARSET",22:"AT_IMPORT",25:"AT_NAMESPACE",34:"AT_MEDIA",35:"LEFT_CURLY_BRACKET",36:"RIGHT_CURLY_BRACKET",37:"AT_KEYFRAMES",46:"AT_PAGE",48:"AT_DOCUMENT",51:"COMMA",52:"URL_FUNC",53:"URL_PREFIX_FUNC",54:"DOMAIN_FUNC",55:"REGEXP_FUNC",56:"AT_FONT_FACE",57:"AT_SUPPORTS",63:"OPERATOR_NOT",64:"OPERATOR_AND",65:"OPERATOR_OR",66:"LEFT_PARENTHESIS",68:"COLON",69:"DeclarationPropValList",70:"RIGHT_PARENTHESIS",72:"ASTERISK",73:"ASTERISK_WITH_WHITESPACE",86:"ASSIGN_MARK",87:"CALC_FUNC",89:"PLUS_SIGN",90:"HYPHEN_MINUS",91:"SOLIDUS",97:"OPERATOR_ONLY",105:"IMPORTANT",110:"GREATER_THAN_SIGN",111:"TILDE",119:"HASH_STRING",120:"HEXA_NUMBER",121:"GENERAL_IDENT",122:"FULL_STOP",123:"SELECTOR_TYPE_WITH_WHITESPACE",124:"SELECTOR_CLASS_WITH_WHITESPACE",125:"SELECTOR_ID_WITH_WHITESPACE",126:"LEFT_SQUARE_BRACKET",128:"RIGHT_SQUARE_BRACKET",129:"INCLUDE_MATCH",130:"DASH_MATCH",131:"PREFIX_MATCH",132:"SUFFIX_MATCH",133:"SUBSTRING_MATCH",137:"N",138:"NUMBER",139:"DIMENSION",141:"STRING",143:"PERCENTAGE",146:"HexaNumericVal",147:"VENDOR_PREFIX_IDENT"},
productions_: [0,[3,2],[4,1],[4,2],[6,1],[6,1],[6,1],[6,1],[11,1],[11,2],[12,1],[12,1],[10,2],[10,1],[10,1],[13,1],[13,1],[13,1],[17,2],[18,2],[18,3],[19,2],[19,3],[15,2],[15,1],[15,1],[27,1],[27,1],[27,1],[31,2],[28,3],[28,2],[29,3],[39,2],[39,3],[39,2],[40,1],[40,2],[38,1],[38,1],[41,1],[41,1],[30,2],[45,1],[45,2],[32,2],[49,1],[49,3],[50,1],[50,1],[50,1],[50,1],[16,2],[33,2],[58,1],[58,2],[60,2],[59,1],[59,2],[61,1],[61,1],[62,5],[71,1],[71,2],[71,2],[74,1],[74,3],[75,1],[76,1],[76,2],[76,3],[77,1],[77,1],[77,1],[77,1],[77,1],[77,1],[77,1],[80,2],[80,3],[84,2],[84,2],[85,1],[85,3],[85,3],[83,2],[83,3],[88,1],[88,3],[78,1],[78,1],[78,1],[78,1],[78,1],[24,1],[92,1],[92,3],[93,1],[93,2],[93,2],[93,3],[93,1],[95,1],[95,1],[96,2],[96,1],[94,2],[94,1],[99,2],[98,3],[98,5],[100,1],[9,2],[42,3],[42,2],[103,1],[103,2],[103,3],[104,4],[104,3],[102,1],[102,3],[106,1],[106,2],[106,3],[106,1],[106,2],[106,3],[108,1],[108,1],[108,1],[107,1],[107,1],[107,1],[107,1],[107,1],[107,1],[107,1],[112,1],[115,1],[115,1],[114,1],[113,2],[113,2],[113,2],[113,2],[113,2],[109,1],[109,1],[109,1],[109,1],[116,5],[116,3],[127,1],[127,1],[127,1],[127,1],[127,1],[127,1],[118,3],[47,1],[47,2],[117,2],[117,2],[134,2],[134,3],[135,1],[135,1],[136,1],[136,3],[136,4],[136,1],[136,1],[136,3],[140,1],[21,1],[142,1],[79,1],[43,1],[82,1],[82,1],[82,1],[44,1],[23,1],[23,1],[144,1],[144,1],[144,1],[81,1],[81,1],[81,1],[145,1],[145,1],[101,1],[101,1],[26,1],[26,1],[26,1],[67,1]],
performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
/* this == yyval */

var $0 = $$.length - 1;
switch (yystate) {
case 1:

      console.log(JSON.stringify($$[$0-1], null, '\t'))
      this.$ = $$[$0-1]
    
break;
case 2:
this.$ = StyleSheet.create().add($$[$0]);
break;
case 3:
this.$ = $$[$0-1].add($$[$0]);
break;
case 8: case 82: case 95: case 105: case 107:
this.$ = [$$[$0]];
break;
case 9: case 69:
this.$ = concat($$[$0-1], $$[$0]);
break;
case 18: case 19: case 21:
this.$ = atRule($$[$0-1], $$[$0]);
break;
case 20:
this.$ = atRule($$[$0-2], $$[$0-1], 'mediaQueries', $$[$0]);
break;
case 22:
this.$ = atRule($$[$0-2], $$[$0], 'prefix', $$[$0-1]);
break;
case 23:
this.$ = addProp($$[$0-1], 'nestedRules', $$[$0]);
break;
case 29:
this.$ = atRule($$[$0-1], null, 'mediaQueries', $$[$0]);
break;
case 30: case 34:
this.$ = $$[$0-1];
break;
case 31: case 33:
this.$ = null;
break;
case 32:
this.$ = atRule($$[$0-2], $$[$0], 'name', $$[$0-1]);
break;
case 35:
this.$ = keyframesVal($$[$0-1], $$[$0]);
break;
case 37: case 55: case 104: case 106:
this.$ = merge($$[$0-1], $$[$0]);
break;
case 42:
this.$ = addProp($$[$0-1], 'value', $$[$0]);
break;
case 43:
this.$ = atRule($$[$0], null);
break;
case 44:
this.$ = atRule($$[$0-1], null, 'pseudoClasses', $$[$0]);
break;
case 45:
this.$ = atRule($$[$0-1], null, 'value', functionVal($$[$0]));
break;
case 47:
this.$ = merge($$[$0-2], $$[$0]);
break;
case 48:
this.$ = functionVal('url', $$[$0]);
break;
case 49:
this.$ = functionVal('url-prefix', $$[$0]);
break;
case 50:
this.$ = functionVal('domain', $$[$0]);
break;
case 51:
this.$ = functionVal('regexp', $$[$0]);
break;
case 52:
this.$ = { type: FONT_FACE, value: $$[$0] };
break;
case 53:
this.$ = atRule($$[$0-1], null, 'expressions', $$[$0]);
break;
case 56:
this.$ = { operator: $$[$0-1], expression: $$[$0] };
break;
case 57:
this.$ = { value: $$[$0] };
break;
case 58:
this.$ = { value: $$[$0], not: true };
break;
case 61:
this.$ = { property: $$[$0-3], value: $$[$0-1] };
break;
case 63: case 64:
this.$ =  $$[$0].set('asteriskHack', true);
break;
case 66: case 83: case 117:
this.$ = concat($$[$0-2], $$[$0]);
break;
case 67:
this.$ = SequenceVal.create($$[$0]);
break;
case 70:
this.$ = Expression.create().set('operator', $$[$0-1]).set('lhs', $$[$0-2]).set('rhs', $$[$0]);
break;
case 78: case 164:
this.$ = FunctionVal.create($$[$0-1]);
break;
case 79: case 165:
this.$ = FunctionVal.create($$[$0-2], $$[$0-1]);
break;
case 84:
this.$ = [Expression.create($$[$0-1], $$[$0-2], $$[$0])]    /* same as `Expression.create().set('operator', $$[$0-1]).set('lhs', $$[$0-2]).set('rhs', $$[$0])` */;
break;
case 85:
this.$ = FunctionVal.create('calc');
break;
case 86:
this.$ = FunctionVal.create('calc', $$[$0-1]);
break;
case 88:
this.$ = Expression.create($$[$0-1], $$[$0-2], $$[$0])    /* same as `Expression.create().set('operator', $$[$0-1]).set('lhs', $$[$0-2]).set('rhs', $$[$0])` */;
break;
case 90: case 197:
this.$ = $$[$0].trimRight();
break;
case 94:
this.$ = { type: MEDIA_QUERIES, value: $$[$0] };
break;
case 96:
this.$ = $$[$0].concat([$$[$0-2]]);
break;
case 97:
this.$ = mediaQuery(null, $$[$0]);
break;
case 98:
this.$ = mediaQuery(null, $$[$0-1], $$[$0]);
break;
case 99:
this.$ = mediaQuery($$[$0-1], $$[$0]);
break;
case 100:
this.$ = mediaQuery($$[$0-2], $$[$0-1], $$[$0]);
break;
case 101:
this.$ = mediaQuery(null, null, $$[$0]);
break;
case 108:
this.$ = addProp($$[$0], 'operator', $$[$0-1]);
break;
case 109:
this.$ = mediaQueryExpr($$[$0-1]);
break;
case 110:
this.$ = mediaQueryExpr($$[$0-3], $$[$0-1]);
break;
case 112:
this.$ = QualifiedRule.create($$[$0]).set('selectors', $$[$0-1]);
break;
case 113:
this.$ = DeclarationList.create($$[$0-1]);
break;
case 114:
this.$ = DeclarationList.create();
break;
case 118:
this.$ = Declaration.create($$[$0-3], $$[$0-1]).set('important', true);
break;
case 119:
this.$ = Declaration.create($$[$0-2], $$[$0]);
break;
case 120:
this.$ = SelectorList.create().add(RootSelector.create($$[$0]));
break;
case 121:
this.$ = $$[$0-2].add(RootSelector.create($$[$0]));
break;
case 123:

      this.$ = $$[$0-1]
      $$[$0-1].set('nextSelector', $$[$0])
    
break;
case 124: case 127:

      this.$ = $$[$0-2]
      $$[$0-2].set('nextSelector', $$[$0-1])
      $$[$0-1].set('nextSelector', $$[$0])
    
break;
case 126:

      var combinator = DescendantSelectorCombinator.create(' ')

      // $$[$0-1] -> combinator -> $$[$0]
      this.$ = $$[$0-1]
      this.$.set('nextSelector', combinator)
      combinator.set('nextSelector', $$[$0])
    
break;
case 128:
this.$ = ChildSelectorCombinator.create($$[$0]);
break;
case 129:
this.$ = AdjacentSiblingSelectorCombinator.create($$[$0]);
break;
case 130:
this.$ = SiblingSelectorCombinator.create($$[$0]);
break;
case 136:
this.$ = selectorComponent(PSEUDO_CLASS, $$[$0]);
break;
case 137:
this.$ = selectorComponent(PSEUDO_ELEMENT, $$[$0]);
break;
case 138:
this.$ = UniversalSelector.create($$[$0]);
break;
case 139: case 140:
this.$ = IdSelector.create(hashVal($$[$0]));
break;
case 141:
this.$ = TypeSelector.create($$[$0]);
break;
case 142: case 143: case 144: case 145: case 146:
this.$ = ClassSelector.create($$[$0-1] + $$[$0]);
break;
case 147:
this.$ = UniversalSelector.create($$[$0].trimRight());
break;
case 148:
this.$ = TypeSelector.create($$[$0].trimRight());
break;
case 149:
this.$ = ClassSelector.create($$[$0].trimRight());
break;
case 150:
this.$ = IdSelector.create(hashVal($$[$0].trimRight()));
break;
case 151:

      this.$ = {
        type: ATTRIBUTE,
        value: $$[$0-3],
        expression: {
          type: EXPRESSION,
          operator: $$[$0-2],
          value: $$[$0-1]
        }
      }
    
break;
case 152:

      this.$ = selectorComponent(ATTR_SELECTOR, {
        type: ATTRIBUTE,
        value: $$[$0-1]
      })
    
break;
case 153:
this.$ = defVariable('include', $$[$0]);
break;
case 154:
this.$ = defVariable('dash', $$[$0]);
break;
case 155:
this.$ = defVariable('prefix', $$[$0]);
break;
case 156:
this.$ = defVariable('suffix', $$[$0]);
break;
case 157:
this.$ = defVariable('substring', $$[$0]);
break;
case 158:
this.$ = defVariable('equal', $$[$0]);
break;
case 159:

      this.$ = $$[$0]
      this.$.prefix = $$[$0-2] + $$[$0-1]
    
break;
case 160:
this.$ = [defVariable(PSEUDO_CLASS, $$[$0])];
break;
case 161:
this.$ = merge($$[$0-1], defVariable(PSEUDO_CLASS, $$[$0-1]));
break;
case 162: case 163:
this.$ = { prefix: $$[$0-1], name: $$[$0] };
break;
case 174:
this.$ = NumberVal.create($$[$0]);
break;
case 175:
this.$ = StringVal.create($$[$0]);
break;
case 176:
this.$ = DimensionVal.create($$[$0]);
break;
case 177:
this.$ = UrlVal.create($$[$0]);
break;
case 178:
this.$ = IdentVal.create($$[$0]);
break;
case 179: case 180:
this.$ = HashVal.create($$[$0]);
break;
case 181:
this.$ = HashVal.create($$[$0].trimRight());
break;
case 182:
this.$ = PercentageVal.create($$[$0]);
break;
case 198:
this.$ = vendorPrefixIdVal($$[$0]);
break;
}
},
table: [{3:1,4:2,6:3,7:$V0,8:$V1,9:6,10:7,13:9,15:10,16:11,17:13,18:14,19:15,20:$V2,22:$V3,25:$V4,27:16,29:17,30:18,31:25,32:26,33:27,34:$V5,37:$V6,45:29,46:$V7,48:$V8,56:$V9,57:$Va,68:$Vb,72:$Vc,73:$Vd,102:8,106:12,107:20,109:21,112:30,113:31,114:32,115:33,116:34,117:35,118:36,119:$Ve,120:$Vf,121:$Vg,122:$Vh,123:$Vi,124:$Vj,125:$Vk,126:$Vl},{1:[3]},{5:[1,52],6:53,7:$V0,8:$V1,9:6,10:7,13:9,15:10,16:11,17:13,18:14,19:15,20:$V2,22:$V3,25:$V4,27:16,29:17,30:18,31:25,32:26,33:27,34:$V5,37:$V6,45:29,46:$V7,48:$V8,56:$V9,57:$Va,68:$Vb,72:$Vc,73:$Vd,102:8,106:12,107:20,109:21,112:30,113:31,114:32,115:33,116:34,117:35,118:36,119:$Ve,120:$Vf,121:$Vg,122:$Vh,123:$Vi,124:$Vj,125:$Vk,126:$Vl},o($Vm,[2,2]),o($Vm,[2,4]),o($Vm,[2,5]),o($Vm,[2,6]),o($Vm,[2,7]),{35:$Vn,42:54,51:[1,55]},{14:[1,57]},o($Vo,[2,13]),o($Vo,[2,14]),o($Vp,[2,120]),{14:[2,15]},{14:[2,16]},{14:[2,17]},{28:58,35:[1,59]},o($Vo,[2,24]),o($Vo,[2,25]),{35:$Vn,42:60},o($Vq,[2,122],{107:20,109:21,112:30,113:31,114:32,115:33,116:34,117:35,118:36,106:61,108:62,68:$Vb,72:$Vc,73:$Vd,89:$Vr,110:$Vs,111:$Vt,119:$Ve,120:$Vf,121:$Vg,122:$Vh,123:$Vi,124:$Vj,125:$Vk,126:$Vl}),o($Vq,[2,125],{107:20,109:21,112:30,113:31,114:32,115:33,116:34,117:35,118:36,106:66,108:67,68:$Vb,72:$Vc,73:$Vd,89:$Vr,110:$Vs,111:$Vt,119:$Ve,120:$Vf,121:$Vg,122:$Vh,123:$Vi,124:$Vj,125:$Vk,126:$Vl}),{21:68,141:$Vu},{21:71,23:70,52:$Vv,79:72,141:$Vu},{21:71,23:74,26:75,52:$Vv,79:72,121:$Vw,123:$Vx,141:$Vu,147:$Vy},{35:[2,26]},{35:[2,27]},{35:[2,28]},{21:81,26:82,38:79,43:80,121:$Vw,123:$Vx,141:$Vu,147:$Vy},{35:$Vn,42:83},o($Vz,[2,131]),o($Vz,[2,132]),o($Vz,[2,133]),o($Vz,[2,134]),o($Vz,[2,135]),o($Vz,[2,136]),o($Vz,[2,137]),o($Vz,[2,147]),o($Vz,[2,148]),o($Vz,[2,149]),o($Vz,[2,150]),{24:84,26:87,63:$VA,66:$VB,92:85,93:86,95:88,96:89,97:$VC,98:92,121:$Vw,123:$Vx,147:$Vy},{49:94,50:95,52:$VD,53:$VE,54:$VF,55:$VG},{58:100,59:101,62:102,63:$VH,66:$VI},{35:[2,43],47:105,68:$VJ,117:106},o($Vz,[2,138]),{26:108,63:[1,112],64:[1,109],65:[1,110],97:[1,111],121:$Vw,123:$Vx,147:$Vy},o($Vz,[2,141]),o($Vz,[2,139]),o($Vz,[2,140]),{26:113,121:$Vw,123:$Vx,147:$Vy},{26:114,63:$VK,68:[1,116],84:117,121:$Vw,123:$Vx,134:115,147:$Vy},{1:[2,1]},o($Vm,[2,3]),o($Vo,[2,112]),{68:$Vb,72:$Vc,73:$Vd,106:119,107:20,109:21,112:30,113:31,114:32,115:33,116:34,117:35,118:36,119:$Ve,120:$Vf,121:$Vg,122:$Vh,123:$Vi,124:$Vj,125:$Vk,126:$Vl},{26:82,36:[1,121],43:124,71:123,72:$VL,73:$VM,103:120,104:122,121:$Vw,123:$Vx,147:$Vy},o($Vo,[2,12]),o($Vo,[2,23]),{9:130,10:131,11:127,12:129,13:9,15:10,16:11,17:13,18:14,19:15,20:$V2,22:$V3,25:$V4,27:16,29:17,30:18,31:25,32:26,33:27,34:$V5,36:[1,128],37:$V6,45:29,46:$V7,48:$V8,56:$V9,57:$Va,68:$Vb,72:$Vc,73:$Vd,102:8,106:12,107:20,109:21,112:30,113:31,114:32,115:33,116:34,117:35,118:36,119:$Ve,120:$Vf,121:$Vg,122:$Vh,123:$Vi,124:$Vj,125:$Vk,126:$Vl},o($Vo,[2,52]),o($Vq,[2,123]),{68:$Vb,72:$Vc,73:$Vd,106:132,107:20,109:21,112:30,113:31,114:32,115:33,116:34,117:35,118:36,119:$Ve,120:$Vf,121:$Vg,122:$Vh,123:$Vi,124:$Vj,125:$Vk,126:$Vl},o($VN,[2,128]),o($VN,[2,129]),o($VN,[2,130]),o($Vq,[2,126]),{68:$Vb,72:$Vc,73:$Vd,106:133,107:20,109:21,112:30,113:31,114:32,115:33,116:34,117:35,118:36,119:$Ve,120:$Vf,121:$Vg,122:$Vh,123:$Vi,124:$Vj,125:$Vk,126:$Vl},{14:[2,18]},o([14,35,36,51,52,63,66,70,72,73,87,89,90,91,97,105,119,120,121,123,125,128,138,139,141,143,147],[2,175]),{14:[2,19],24:134,26:87,63:$VA,66:$VB,92:85,93:86,95:88,96:89,97:$VC,98:92,121:$Vw,123:$Vx,147:$Vy},o($VO,[2,183]),o($VO,[2,184]),o([14,36,51,52,63,66,70,72,73,87,89,90,91,97,105,119,120,121,123,125,128,138,139,141,143,147],[2,177]),{14:[2,21]},{21:71,23:135,52:$Vv,79:72,141:$Vu},o($VP,[2,195]),o($VP,[2,196]),o($VP,[2,197]),{26:82,35:$VQ,39:136,41:138,43:139,44:140,121:$Vw,123:$Vx,143:$VR,147:$Vy},o($VS,[2,38]),o($VS,[2,39]),o([35,51,68,70,72,73,89,110,111,119,120,121,122,123,124,125,126,128,143,147],$VT),o($Vo,[2,42]),{35:[2,29]},o($VU,[2,94]),o($VU,[2,95],{51:[1,142]}),o($VV,[2,97],{94:143,99:144,64:$VW}),{26:146,121:$Vw,123:$Vx,147:$Vy},o($VV,[2,101]),o($VX,[2,102]),o($VX,[2,103]),o($VV,[2,105],{99:144,94:147,64:$VW}),{26:82,43:149,100:148,121:$Vw,123:$Vx,147:$Vy},{35:[2,45],51:[1,150]},o($Vp,[2,46]),o($Vp,[2,48]),o($Vp,[2,49]),o($Vp,[2,50]),o($Vp,[2,51]),{35:[2,53],60:151,61:152,64:[1,153],65:[1,154]},o($VY,[2,54]),o($VY,[2,57]),{62:155,66:$VI},{26:157,67:156,121:$Vw,123:$Vx,147:$Vy},{35:[2,44],68:$VJ,117:158},o($VZ,[2,160]),{26:114,63:$VK,84:117,121:$Vw,123:$Vx,134:115,147:$Vy},o($Vz,[2,142]),o($Vz,[2,143]),o($Vz,[2,144]),o($Vz,[2,145]),o($Vz,[2,146]),{86:[1,166],127:159,128:[1,160],129:[1,161],130:[1,162],131:[1,163],132:[1,164],133:[1,165]},o($Vz,[2,162],{66:$V_}),o($Vz,[2,163]),{26:82,43:168,121:$Vw,123:$Vx,147:$Vy},{68:$Vb,70:[1,169],72:$Vc,73:$Vd,90:[1,174],106:171,107:20,109:21,112:30,113:31,114:32,115:33,116:34,117:35,118:36,119:$Ve,120:$Vf,121:$Vg,122:$Vh,123:$Vi,124:$Vj,125:$Vk,126:$Vl,135:170,136:172,137:[1,173],138:[1,175],139:[1,176]},{66:[1,177]},o($Vp,[2,121]),{36:[1,178]},o($V$,[2,114]),{14:[1,179],36:[2,115]},{68:[1,180]},{68:[2,62]},{26:82,43:181,121:$Vw,123:$Vx,147:$Vy},{26:82,43:182,121:$Vw,123:$Vx,147:$Vy},{36:[1,183]},o($Vo,[2,31]),{9:130,10:131,11:184,12:129,13:9,15:10,16:11,17:13,18:14,19:15,20:$V2,22:$V3,25:$V4,27:16,29:17,30:18,31:25,32:26,33:27,34:$V5,36:[2,8],37:$V6,45:29,46:$V7,48:$V8,56:$V9,57:$Va,68:$Vb,72:$Vc,73:$Vd,102:8,106:12,107:20,109:21,112:30,113:31,114:32,115:33,116:34,117:35,118:36,119:$Ve,120:$Vf,121:$Vg,122:$Vh,123:$Vi,124:$Vj,125:$Vk,126:$Vl},o($V01,[2,10]),o($V01,[2,11]),o($Vq,[2,124]),o($Vq,[2,127]),{14:[2,20]},{14:[2,22]},o($Vo,[2,32]),{26:82,35:$VQ,36:[1,185],39:187,40:186,41:138,43:139,44:140,121:$Vw,123:$Vx,143:$VR,147:$Vy},{35:$Vn,42:188},{35:[2,40]},{35:[2,41]},o([14,35,36,51,52,63,70,72,73,87,89,90,91,105,119,120,121,123,125,128,138,139,141,143,147],[2,182]),{26:87,63:$VA,66:$VB,92:189,93:86,95:88,96:89,97:$VC,98:92,121:$Vw,123:$Vx,147:$Vy},o($VV,[2,98],{99:190,64:$VW}),o($V11,[2,107]),{66:$VB,98:191},o($VV,[2,99],{99:144,94:192,64:$VW}),o($VV,[2,104],{99:190,64:$VW}),{68:[1,194],70:[1,193]},o([68,70],[2,111]),{50:195,52:$VD,53:$VE,54:$VF,55:$VG},o($VY,[2,55]),{59:196,62:102,63:$VH,66:$VI},o($V21,[2,59]),o($V21,[2,60]),o($VY,[2,58]),{68:[1,197]},{68:[2,198]},o($VZ,[2,161]),{21:201,26:82,43:203,44:208,52:$Vv,79:202,81:204,101:198,121:$Vw,123:$Vx,138:$V31,139:$V41,140:206,141:$Vu,142:207,143:$VR,144:199,145:200,146:$V51,147:$Vy},o($Vz,[2,152]),o($V61,[2,153]),o($V61,[2,154]),o($V61,[2,155]),o($V61,[2,156]),o($V61,[2,157]),o($V61,[2,158]),o($V71,[2,80]),o($Vz,[2,159]),o($Vz,[2,164]),{70:[1,211]},{70:[2,166]},{70:[2,167]},{70:[2,168],89:[1,212]},{137:[1,213],138:[1,214]},{70:[2,171]},{70:[2,172]},o($V71,[2,81]),o($V$,[2,113]),{26:82,36:[2,116],43:124,71:123,72:$VL,73:$VM,103:215,104:122,121:$Vw,123:$Vx,147:$Vy},{21:220,26:227,43:222,44:208,52:$Vv,63:$VK,74:216,75:217,76:218,77:219,79:221,80:223,81:224,82:225,83:226,84:228,87:$V81,119:$V91,120:$Va1,121:$Vw,123:$Vx,125:$Vb1,138:$V31,139:$V41,140:206,141:$Vu,142:207,143:$VR,147:$Vy},{68:[2,63]},{68:[2,64]},o($Vo,[2,30]),{36:[2,9]},o($V$,[2,33]),{26:82,35:$VQ,36:[1,233],39:234,41:138,43:139,44:140,121:$Vw,123:$Vx,143:$VR,147:$Vy},o($Vc1,[2,36]),o($V$,[2,35]),o($VU,[2,96]),o($V11,[2,106]),o($V11,[2,108]),o($VV,[2,100],{99:190,64:$VW}),o($V11,[2,109]),{21:201,26:82,43:203,44:208,52:$Vv,79:202,81:204,101:235,121:$Vw,123:$Vx,138:$V31,139:$V41,140:206,141:$Vu,142:207,143:$VR,144:199,145:200,146:$V51,147:$Vy},o($Vp,[2,47]),o($VY,[2,56]),{69:[1,236]},{128:[1,237]},o($Vd1,[2,193]),o($Vd1,[2,194]),o($Vd1,[2,185]),o($Vd1,[2,186]),o($Vd1,[2,187]),o($Vd1,[2,191]),o($Vd1,[2,192]),o($Ve1,[2,188]),o($Ve1,[2,189]),o($Ve1,[2,190]),o($Ve1,[2,174]),o($Ve1,[2,176]),o($Vz,[2,165]),{138:[1,238]},{89:[1,239]},{137:[1,240]},{36:[2,117]},o($Vf1,[2,119],{51:[1,242],105:[1,241]}),o($Vg1,[2,65]),o($Vg1,[2,67],{140:206,142:207,44:208,21:220,79:221,43:222,80:223,81:224,82:225,83:226,26:227,84:228,77:243,78:244,52:$Vv,63:$VK,72:$Vh1,73:$Vi1,87:$V81,89:$Vj1,90:$Vk1,91:$Vl1,119:$V91,120:$Va1,121:$Vw,123:$Vx,125:$Vb1,138:$V31,139:$V41,141:$Vu,143:$VR,147:$Vy}),o($Vm1,[2,68]),o($Vm1,[2,71]),o($Vm1,[2,72]),o($Vm1,[2,73]),o($Vm1,[2,74]),o($Vm1,[2,75]),o($Vm1,[2,76]),o($Vm1,[2,77]),o($Vm1,$VT,{66:$V_}),{21:220,26:253,43:222,44:208,52:$Vv,63:$VK,70:[1,250],76:252,77:219,79:221,80:223,81:224,82:225,83:226,84:228,85:251,87:$V81,119:$V91,120:$Va1,121:$Vw,123:$Vx,125:$Vb1,138:$V31,139:$V41,140:206,141:$Vu,142:207,143:$VR,147:$Vy},o($Vm1,[2,179]),o($Vm1,[2,180]),o($Vm1,[2,181]),{44:208,70:[1,254],81:256,88:255,138:$V31,139:$V41,140:206,142:207,143:$VR},o($V$,[2,34]),o($Vc1,[2,37]),{70:[1,257]},{70:[1,258]},o($Vz,[2,151]),{70:[2,169]},{138:[1,259]},{70:[2,173]},o($Vf1,[2,118]),{21:220,26:227,43:222,44:208,52:$Vv,63:$VK,75:260,76:218,77:219,79:221,80:223,81:224,82:225,83:226,84:228,87:$V81,119:$V91,120:$Va1,121:$Vw,123:$Vx,125:$Vb1,138:$V31,139:$V41,140:206,141:$Vu,142:207,143:$VR,147:$Vy},o($Vm1,[2,69]),{21:220,26:227,43:222,44:208,52:$Vv,63:$VK,77:261,79:221,80:223,81:224,82:225,83:226,84:228,87:$V81,119:$V91,120:$Va1,121:$Vw,123:$Vx,125:$Vb1,138:$V31,139:$V41,140:206,141:$Vu,142:207,143:$VR,147:$Vy},o($Vn1,[2,89]),o($Vn1,[2,90]),o($Vn1,[2,91]),o($Vn1,[2,92]),o($Vn1,[2,93]),o($Vm1,[2,78]),{51:[1,263],70:[1,262]},o($Vo1,[2,82],{140:206,142:207,44:208,21:220,79:221,43:222,80:223,81:224,82:225,83:226,26:227,84:228,77:243,78:244,52:$Vv,63:$VK,72:$Vh1,73:$Vi1,87:$V81,89:$Vj1,90:$Vk1,91:$Vl1,119:$V91,120:$Va1,121:$Vw,123:$Vx,125:$Vb1,138:$V31,139:$V41,141:$Vu,143:$VR,147:$Vy}),o([51,52,63,70,72,73,87,89,90,91,119,120,121,123,125,138,139,141,143,147],$VT,{66:$V_,86:[1,264]}),o($Vm1,[2,85]),{70:[1,265],72:$Vh1,73:$Vi1,78:266,89:$Vj1,90:$Vk1,91:$Vl1},o($Vp1,[2,87]),o($V11,[2,110]),o($VY,[2,61]),{70:[2,170]},o($Vg1,[2,66]),o($Vm1,[2,70]),o($Vm1,[2,79]),{21:220,26:227,43:222,44:208,52:$Vv,63:$VK,76:267,77:219,79:221,80:223,81:224,82:225,83:226,84:228,87:$V81,119:$V91,120:$Va1,121:$Vw,123:$Vx,125:$Vb1,138:$V31,139:$V41,140:206,141:$Vu,142:207,143:$VR,147:$Vy},{44:208,81:268,138:$V31,139:$V41,140:206,142:207,143:$VR},o($Vm1,[2,86]),{44:208,81:269,138:$V31,139:$V41,140:206,142:207,143:$VR},o($Vo1,[2,83],{140:206,142:207,44:208,21:220,79:221,43:222,80:223,81:224,82:225,83:226,26:227,84:228,77:243,78:244,52:$Vv,63:$VK,72:$Vh1,73:$Vi1,87:$V81,89:$Vj1,90:$Vk1,91:$Vl1,119:$V91,120:$Va1,121:$Vw,123:$Vx,125:$Vb1,138:$V31,139:$V41,141:$Vu,143:$VR,147:$Vy}),o($Vo1,[2,84]),o($Vp1,[2,88])],
defaultActions: {13:[2,15],14:[2,16],15:[2,17],25:[2,26],26:[2,27],27:[2,28],52:[2,1],68:[2,18],74:[2,21],84:[2,29],124:[2,62],134:[2,20],135:[2,22],139:[2,40],140:[2,41],157:[2,198],171:[2,166],172:[2,167],175:[2,171],176:[2,172],181:[2,63],182:[2,64],184:[2,9],215:[2,117],238:[2,169],240:[2,173],259:[2,170]},
parseError: function parseError(str, hash) {
    if (hash.recoverable) {
        this.trace(str);
    } else {
        function _parseError (msg, hash) {
            this.message = msg;
            this.hash = hash;
        }
        _parseError.prototype = Error;

        throw new _parseError(str, hash);
    }
},
parse: function parse(input) {
    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    var args = lstack.slice.call(arguments, 1);
    var lexer = Object.create(this.lexer);
    var sharedState = { yy: {} };
    for (var k in this.yy) {
        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {
            sharedState.yy[k] = this.yy[k];
        }
    }
    lexer.setInput(input, sharedState.yy);
    sharedState.yy.lexer = lexer;
    sharedState.yy.parser = this;
    if (typeof lexer.yylloc == 'undefined') {
        lexer.yylloc = {};
    }
    var yyloc = lexer.yylloc;
    lstack.push(yyloc);
    var ranges = lexer.options && lexer.options.ranges;
    if (typeof sharedState.yy.parseError === 'function') {
        this.parseError = sharedState.yy.parseError;
    } else {
        this.parseError = Object.getPrototypeOf(this).parseError;
    }
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    _token_stack:
        var lex = function () {
            var token;
            token = lexer.lex() || EOF;
            if (typeof token !== 'number') {
                token = self.symbols_[token] || token;
            }
            return token;
        };
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == 'undefined') {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
                    if (typeof action === 'undefined' || !action.length || !action[0]) {
                var errStr = '';
                expected = [];
                for (p in table[state]) {
                    if (this.terminals_[p] && p > TERROR) {
                        expected.push('\'' + this.terminals_[p] + '\'');
                    }
                }
                if (lexer.showPosition) {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\n' + lexer.showPosition() + '\nExpecting ' + expected.join(', ') + ', got \'' + (this.terminals_[symbol] || symbol) + '\'';
                } else {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\'' + (this.terminals_[symbol] || symbol) + '\'');
                }
                this.parseError(errStr, {
                    text: lexer.match,
                    token: this.terminals_[symbol] || symbol,
                    line: lexer.yylineno,
                    loc: yyloc,
                    expected: expected
                });
            }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(lexer.yytext);
            lstack.push(lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = lexer.yyleng;
                yytext = lexer.yytext;
                yylineno = lexer.yylineno;
                yyloc = lexer.yylloc;
                if (recovering > 0) {
                    recovering--;
                }
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {
                first_line: lstack[lstack.length - (len || 1)].first_line,
                last_line: lstack[lstack.length - 1].last_line,
                first_column: lstack[lstack.length - (len || 1)].first_column,
                last_column: lstack[lstack.length - 1].last_column
            };
            if (ranges) {
                yyval._$.range = [
                    lstack[lstack.length - (len || 1)].range[0],
                    lstack[lstack.length - 1].range[1]
                ];
            }
            r = this.performAction.apply(yyval, [
                yytext,
                yyleng,
                yylineno,
                sharedState.yy,
                action[1],
                vstack,
                lstack
            ].concat(args));
            if (typeof r !== 'undefined') {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}};

    'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var concat = function concat(l, r) {
    l = l ? l : [];
    r = r ? r : [];

    l = l instanceof Array ? l : [l];
    r = r instanceof Array ? r : [r];

    return l.concat(r);
};

var _toJSON = function _toJSON(o) {
    if (!o) {
        return null;
    }
    return o.hasOwnProperty('toJSON') ? o.toJSON() : o;
};

var CSSObject = function () {
    function CSSObject() {
        _classCallCheck(this, CSSObject);
    }

    _createClass(CSSObject, [{
        key: 'getType',
        value: function getType(type) {
            return 'OBJECT';
        }
    }, {
        key: 'set',
        value: function set(key, value) {
            if (value) {
                this[key] = value;
            }
            return this;
        }
    }, {
        key: 'get',
        value: function get(key, defaultValue) {
            if (key in this) {
                return this[key];
            }
            return defaultValue;
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                value: _toJSON(this.get('value'))
            };
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new CSSObject().set('value', value);
        }
    }]);

    return CSSObject;
}();

var StyleSheet = function (_CSSObject) {
    _inherits(StyleSheet, _CSSObject);

    function StyleSheet() {
        _classCallCheck(this, StyleSheet);

        return _possibleConstructorReturn(this, (StyleSheet.__proto__ || Object.getPrototypeOf(StyleSheet)).apply(this, arguments));
    }

    _createClass(StyleSheet, [{
        key: 'getType',
        value: function getType(type) {
            return 'STYLESHEET';
        }
    }, {
        key: 'add',
        value: function add(component) {
            if (!this.value) {
                this.value = [];
            }

            if (component) {
                this.value.push(component);
            }

            return this;
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            var json = [];
            var components = this.get('value', []);

            return {
                type: this.getType(),
                value: components.map(function (o) {
                    return _toJSON(o);
                })
            };
        }
    }], [{
        key: 'create',
        value: function create() {
            return new StyleSheet();
        }
    }]);

    return StyleSheet;
}(CSSObject);

var AtRule = function (_CSSObject2) {
    _inherits(AtRule, _CSSObject2);

    function AtRule() {
        _classCallCheck(this, AtRule);

        return _possibleConstructorReturn(this, (AtRule.__proto__ || Object.getPrototypeOf(AtRule)).apply(this, arguments));
    }

    _createClass(AtRule, [{
        key: 'getType',
        value: function getType() {
            return 'AT_RULE';
        }
    }, {
        key: 'rule',
        value: function rule(_rule) {
            return set('rule', _rule);
        }
    }]);

    return AtRule;
}(CSSObject);

var AtCharsetRule = function (_AtRule) {
    _inherits(AtCharsetRule, _AtRule);

    function AtCharsetRule() {
        _classCallCheck(this, AtCharsetRule);

        return _possibleConstructorReturn(this, (AtCharsetRule.__proto__ || Object.getPrototypeOf(AtCharsetRule)).apply(this, arguments));
    }

    _createClass(AtCharsetRule, [{
        key: 'getType',
        value: function getType(rule) {
            return 'AT_RULE';
        }
    }]);

    return AtCharsetRule;
}(AtRule);

var StringVal = function (_CSSObject3) {
    _inherits(StringVal, _CSSObject3);

    function StringVal() {
        _classCallCheck(this, StringVal);

        return _possibleConstructorReturn(this, (StringVal.__proto__ || Object.getPrototypeOf(StringVal)).apply(this, arguments));
    }

    _createClass(StringVal, [{
        key: 'getType',
        value: function getType() {
            return 'STRING';
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new StringVal().set('value', value);
        }
    }]);

    return StringVal;
}(CSSObject);

var PrimitiveVal = function (_CSSObject4) {
    _inherits(PrimitiveVal, _CSSObject4);

    function PrimitiveVal() {
        _classCallCheck(this, PrimitiveVal);

        return _possibleConstructorReturn(this, (PrimitiveVal.__proto__ || Object.getPrototypeOf(PrimitiveVal)).apply(this, arguments));
    }

    _createClass(PrimitiveVal, [{
        key: 'getType',
        value: function getType() {
            return 'PRIMITIVE_VALUE';
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                value: this.get('value')
            };
        }
    }]);

    return PrimitiveVal;
}(CSSObject);

var NumberVal = function (_PrimitiveVal) {
    _inherits(NumberVal, _PrimitiveVal);

    function NumberVal() {
        _classCallCheck(this, NumberVal);

        return _possibleConstructorReturn(this, (NumberVal.__proto__ || Object.getPrototypeOf(NumberVal)).apply(this, arguments));
    }

    _createClass(NumberVal, [{
        key: 'getType',
        value: function getType() {
            return 'NUMBER';
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new NumberVal().set('value', value);
        }
    }]);

    return NumberVal;
}(PrimitiveVal);

var HashVal = function (_PrimitiveVal2) {
    _inherits(HashVal, _PrimitiveVal2);

    function HashVal() {
        _classCallCheck(this, HashVal);

        return _possibleConstructorReturn(this, (HashVal.__proto__ || Object.getPrototypeOf(HashVal)).apply(this, arguments));
    }

    _createClass(HashVal, [{
        key: 'getType',
        value: function getType() {
            return 'HASH';
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new HashVal().set('value', value);
        }
    }]);

    return HashVal;
}(PrimitiveVal);

var PercentageVal = function (_PrimitiveVal3) {
    _inherits(PercentageVal, _PrimitiveVal3);

    function PercentageVal() {
        _classCallCheck(this, PercentageVal);

        return _possibleConstructorReturn(this, (PercentageVal.__proto__ || Object.getPrototypeOf(PercentageVal)).apply(this, arguments));
    }

    _createClass(PercentageVal, [{
        key: 'getType',
        value: function getType() {
            return 'PERCENTAGE';
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                value: this.get('value'),
                unit: this.get('unit')
            };
        }
    }], [{
        key: 'create',
        value: function create(value) {
            var result = value.match(/(([\+\-]?[0-9]+(\.[0-9]+)?)|([\+\-]?\.[0-9]+))([%])/);

            return new PercentageVal().set('value', parseFloat(result[1])).set('unit', result[5]);
        }
    }]);

    return PercentageVal;
}(PrimitiveVal);

var DimensionVal = function (_PrimitiveVal4) {
    _inherits(DimensionVal, _PrimitiveVal4);

    function DimensionVal() {
        _classCallCheck(this, DimensionVal);

        return _possibleConstructorReturn(this, (DimensionVal.__proto__ || Object.getPrototypeOf(DimensionVal)).apply(this, arguments));
    }

    _createClass(DimensionVal, [{
        key: 'getType',
        value: function getType() {
            return 'DIMENSION';
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                value: this.get('value'),
                unit: this.get('unit')
            };
        }
    }], [{
        key: 'create',
        value: function create(value) {
            var result = value.match(/(([\+\-]?[0-9]+(\.[0-9]+)?)|([\+\-]?\.[0-9]+))([a-zA-Z]+)/);

            return new DimensionVal().set('value', parseFloat(result[1])).set('unit', result[5]);
        }
    }]);

    return DimensionVal;
}(PrimitiveVal);

var IdentVal = function (_CSSObject5) {
    _inherits(IdentVal, _CSSObject5);

    function IdentVal() {
        _classCallCheck(this, IdentVal);

        return _possibleConstructorReturn(this, (IdentVal.__proto__ || Object.getPrototypeOf(IdentVal)).apply(this, arguments));
    }

    _createClass(IdentVal, [{
        key: 'getType',
        value: function getType() {
            return 'ID';
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                vendorPrefix: this.get('vendorPrefix', ''),
                value: this.get('value')
            };
        }
    }], [{
        key: 'create',
        value: function create(value) {
            var result = value.match(/([-](webkit|moz|o|ms)[-])?([0-9a-zA-Z-]*)/);

            return new IdentVal().set('vendorPrefix', result[1]).set('value', result[3]);
        }
    }]);

    return IdentVal;
}(CSSObject);

var UrlVal = function (_CSSObject6) {
    _inherits(UrlVal, _CSSObject6);

    function UrlVal() {
        _classCallCheck(this, UrlVal);

        return _possibleConstructorReturn(this, (UrlVal.__proto__ || Object.getPrototypeOf(UrlVal)).apply(this, arguments));
    }

    _createClass(UrlVal, [{
        key: 'getType',
        value: function getType() {
            return 'URL';
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new UrlVal().set('value', value);
        }
    }]);

    return UrlVal;
}(CSSObject);

var FunctionVal = function (_CSSObject7) {
    _inherits(FunctionVal, _CSSObject7);

    function FunctionVal() {
        _classCallCheck(this, FunctionVal);

        return _possibleConstructorReturn(this, (FunctionVal.__proto__ || Object.getPrototypeOf(FunctionVal)).apply(this, arguments));
    }

    _createClass(FunctionVal, [{
        key: 'getType',
        value: function getType() {
            return 'FUNCTION';
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                name: this.get('name'),
                parameters: _toJSON(this.get('parameters'))
            };
        }
    }], [{
        key: 'create',
        value: function create(name, parameters) {
            return new FunctionVal().set('name', name).set('parameters', parameters);
        }
    }]);

    return FunctionVal;
}(CSSObject);

var SequenceVal = function (_CSSObject8) {
    _inherits(SequenceVal, _CSSObject8);

    function SequenceVal() {
        _classCallCheck(this, SequenceVal);

        return _possibleConstructorReturn(this, (SequenceVal.__proto__ || Object.getPrototypeOf(SequenceVal)).apply(this, arguments));
    }

    _createClass(SequenceVal, [{
        key: 'getType',
        value: function getType() {
            return 'SEQUENCE';
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                value: this.get('value').map(function (o) {
                    return _toJSON(o);
                })
            };
        }
    }], [{
        key: 'create',
        value: function create(list) {
            if (typeof list == 'array' && list.length > 1) {
                return new SequenceVal().set('value', list);
            }

            return list;
        }
    }]);

    return SequenceVal;
}(CSSObject);

var Declaration = function (_CSSObject9) {
    _inherits(Declaration, _CSSObject9);

    function Declaration() {
        _classCallCheck(this, Declaration);

        return _possibleConstructorReturn(this, (Declaration.__proto__ || Object.getPrototypeOf(Declaration)).apply(this, arguments));
    }

    _createClass(Declaration, [{
        key: 'getType',
        value: function getType() {
            return 'DECLARATION';
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                property: _toJSON(this.get('property')),
                value: _toJSON(this.get('value')),
                important: this.get('important', false)
            };
        }
    }], [{
        key: 'create',
        value: function create(property, value) {
            return new Declaration().set('property', property).set('value', value);
        }
    }]);

    return Declaration;
}(CSSObject);

var DeclarationList = function (_CSSObject10) {
    _inherits(DeclarationList, _CSSObject10);

    function DeclarationList() {
        _classCallCheck(this, DeclarationList);

        return _possibleConstructorReturn(this, (DeclarationList.__proto__ || Object.getPrototypeOf(DeclarationList)).apply(this, arguments));
    }

    _createClass(DeclarationList, [{
        key: 'getType',
        value: function getType() {
            return 'DECLARATION_LIST';
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                value: this.get('value').map(function (o) {
                    return _toJSON(o);
                })
            };
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new DeclarationList()
            // force value to array
            .set('value', concat(value, []));
        }
    }]);

    return DeclarationList;
}(CSSObject);

var QualifiedRule = function (_CSSObject11) {
    _inherits(QualifiedRule, _CSSObject11);

    function QualifiedRule() {
        _classCallCheck(this, QualifiedRule);

        return _possibleConstructorReturn(this, (QualifiedRule.__proto__ || Object.getPrototypeOf(QualifiedRule)).apply(this, arguments));
    }

    _createClass(QualifiedRule, [{
        key: 'getType',
        value: function getType() {
            return 'QUALIFIED_RULE';
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                selectors: _toJSON(this.get('selectors')),
                value: _toJSON(this.get('value'))
            };
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new QualifiedRule().set('value', value);
        }
    }]);

    return QualifiedRule;
}(CSSObject);

var Expression = function (_CSSObject12) {
    _inherits(Expression, _CSSObject12);

    function Expression() {
        _classCallCheck(this, Expression);

        return _possibleConstructorReturn(this, (Expression.__proto__ || Object.getPrototypeOf(Expression)).apply(this, arguments));
    }

    _createClass(Expression, [{
        key: 'getType',
        value: function getType() {
            return 'EXPRESSION';
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                operator: this.get('operator'),
                lhs: _toJSON(this.get('lhs')),
                rhs: _toJSON(this.get('rhs'))
            };
        }
    }], [{
        key: 'create',
        value: function create(operator, lhs, rhs) {
            return new Expression().set('operator', operator).set('lhs', lhs).set('rhs', rhs);
        }
    }]);

    return Expression;
}(CSSObject);

var Selector = function (_CSSObject13) {
    _inherits(Selector, _CSSObject13);

    function Selector() {
        _classCallCheck(this, Selector);

        return _possibleConstructorReturn(this, (Selector.__proto__ || Object.getPrototypeOf(Selector)).apply(this, arguments));
    }

    _createClass(Selector, [{
        key: 'getType',
        value: function getType() {
            return 'SELECTOR';
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                value: _toJSON(this.get('value')),
                nextSelector: _toJSON(this.get('nextSelector'))
            };
        }
    }]);

    return Selector;
}(CSSObject);

var SelectorList = function (_Selector) {
    _inherits(SelectorList, _Selector);

    function SelectorList() {
        _classCallCheck(this, SelectorList);

        return _possibleConstructorReturn(this, (SelectorList.__proto__ || Object.getPrototypeOf(SelectorList)).apply(this, arguments));
    }

    _createClass(SelectorList, [{
        key: 'getType',
        value: function getType() {
            return 'SELECTOR_LIST';
        }
    }, {
        key: 'add',
        value: function add(rootSelector) {
            if (!this.value) {
                this.value = [];
            }

            this.value.push(rootSelector);

            return this;
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                value: this.get('value').map(function (o) {
                    return _toJSON(o);
                })
            };
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new SelectorList();
        }
    }]);

    return SelectorList;
}(Selector);

var RootSelector = function (_Selector2) {
    _inherits(RootSelector, _Selector2);

    function RootSelector() {
        _classCallCheck(this, RootSelector);

        return _possibleConstructorReturn(this, (RootSelector.__proto__ || Object.getPrototypeOf(RootSelector)).apply(this, arguments));
    }

    _createClass(RootSelector, [{
        key: 'getType',
        value: function getType() {
            return 'SELECTOR_ROOT';
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                value: _toJSON(this.get('value'))
            };
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new RootSelector().set('value', value);
        }
    }]);

    return RootSelector;
}(Selector);

var SelectorCombinator = function (_Selector3) {
    _inherits(SelectorCombinator, _Selector3);

    function SelectorCombinator() {
        _classCallCheck(this, SelectorCombinator);

        return _possibleConstructorReturn(this, (SelectorCombinator.__proto__ || Object.getPrototypeOf(SelectorCombinator)).apply(this, arguments));
    }

    _createClass(SelectorCombinator, [{
        key: 'getType',
        value: function getType() {
            return 'SELECTOR_COMBINATOR';
        }
    }, {
        key: 'getRelation',
        value: function getRelation() {
            return 'UNKNOWN';
        }
    }, {
        key: 'toJSON',
        value: function toJSON() {
            return {
                type: this.getType(),
                relation: this.getRelation(),
                value: _toJSON(this.get('value')),
                nextSelector: _toJSON(this.get('nextSelector'))
            };
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new SelectorCombinator().set('value', value);
        }
    }]);

    return SelectorCombinator;
}(Selector);

var DescendantSelectorCombinator = function (_SelectorCombinator) {
    _inherits(DescendantSelectorCombinator, _SelectorCombinator);

    function DescendantSelectorCombinator() {
        _classCallCheck(this, DescendantSelectorCombinator);

        return _possibleConstructorReturn(this, (DescendantSelectorCombinator.__proto__ || Object.getPrototypeOf(DescendantSelectorCombinator)).apply(this, arguments));
    }

    _createClass(DescendantSelectorCombinator, [{
        key: 'getRelation',
        value: function getRelation() {
            return 'DESCEDANT';
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new DescendantSelectorCombinator().set('value', value);
        }
    }]);

    return DescendantSelectorCombinator;
}(SelectorCombinator);

var ChildSelectorCombinator = function (_SelectorCombinator2) {
    _inherits(ChildSelectorCombinator, _SelectorCombinator2);

    function ChildSelectorCombinator() {
        _classCallCheck(this, ChildSelectorCombinator);

        return _possibleConstructorReturn(this, (ChildSelectorCombinator.__proto__ || Object.getPrototypeOf(ChildSelectorCombinator)).apply(this, arguments));
    }

    _createClass(ChildSelectorCombinator, [{
        key: 'getRelation',
        value: function getRelation() {
            return 'CHILD';
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new ChildSelectorCombinator().set('value', value);
        }
    }]);

    return ChildSelectorCombinator;
}(SelectorCombinator);

var AdjacentSiblingSelectorCombinator = function (_SelectorCombinator3) {
    _inherits(AdjacentSiblingSelectorCombinator, _SelectorCombinator3);

    function AdjacentSiblingSelectorCombinator() {
        _classCallCheck(this, AdjacentSiblingSelectorCombinator);

        return _possibleConstructorReturn(this, (AdjacentSiblingSelectorCombinator.__proto__ || Object.getPrototypeOf(AdjacentSiblingSelectorCombinator)).apply(this, arguments));
    }

    _createClass(AdjacentSiblingSelectorCombinator, [{
        key: 'getRelation',
        value: function getRelation() {
            return 'ADJACENT_SIBLING';
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new AdjacentSiblingSelectorCombinator().set('value', value);
        }
    }]);

    return AdjacentSiblingSelectorCombinator;
}(SelectorCombinator);

var SiblingSelectorCombinator = function (_SelectorCombinator4) {
    _inherits(SiblingSelectorCombinator, _SelectorCombinator4);

    function SiblingSelectorCombinator() {
        _classCallCheck(this, SiblingSelectorCombinator);

        return _possibleConstructorReturn(this, (SiblingSelectorCombinator.__proto__ || Object.getPrototypeOf(SiblingSelectorCombinator)).apply(this, arguments));
    }

    _createClass(SiblingSelectorCombinator, [{
        key: 'getRelation',
        value: function getRelation() {
            return 'SIBLING';
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new SiblingSelectorCombinator().set('value', value);
        }
    }]);

    return SiblingSelectorCombinator;
}(SelectorCombinator);

var ClassSelector = function (_Selector4) {
    _inherits(ClassSelector, _Selector4);

    function ClassSelector() {
        _classCallCheck(this, ClassSelector);

        return _possibleConstructorReturn(this, (ClassSelector.__proto__ || Object.getPrototypeOf(ClassSelector)).apply(this, arguments));
    }

    _createClass(ClassSelector, [{
        key: 'getType',
        value: function getType() {
            return 'CLASS_SELECTOR';
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new ClassSelector().set('value', value);
        }
    }]);

    return ClassSelector;
}(Selector);

var TypeSelector = function (_Selector5) {
    _inherits(TypeSelector, _Selector5);

    function TypeSelector() {
        _classCallCheck(this, TypeSelector);

        return _possibleConstructorReturn(this, (TypeSelector.__proto__ || Object.getPrototypeOf(TypeSelector)).apply(this, arguments));
    }

    _createClass(TypeSelector, [{
        key: 'getType',
        value: function getType() {
            return 'TYPE_SELECTOR';
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new TypeSelector().set('value', value);
        }
    }]);

    return TypeSelector;
}(Selector);

var IdSelector = function (_Selector6) {
    _inherits(IdSelector, _Selector6);

    function IdSelector() {
        _classCallCheck(this, IdSelector);

        return _possibleConstructorReturn(this, (IdSelector.__proto__ || Object.getPrototypeOf(IdSelector)).apply(this, arguments));
    }

    _createClass(IdSelector, [{
        key: 'getType',
        value: function getType() {
            return 'ID_SELECTOR';
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new IdSelector().set('value', value);
        }
    }]);

    return IdSelector;
}(Selector);

var UniversalSelector = function (_Selector7) {
    _inherits(UniversalSelector, _Selector7);

    function UniversalSelector() {
        _classCallCheck(this, UniversalSelector);

        return _possibleConstructorReturn(this, (UniversalSelector.__proto__ || Object.getPrototypeOf(UniversalSelector)).apply(this, arguments));
    }

    _createClass(UniversalSelector, [{
        key: 'getType',
        value: function getType() {
            return 'UNIVERSAL_SELECTOR';
        }
    }], [{
        key: 'create',
        value: function create(value) {
            return new UniversalSelector().set('value', value);
        }
    }]);

    return UniversalSelector;
}(Selector);
/* generated by jison-lex 0.3.4 */
var lexer = (function(){
var lexer = ({

EOF:1,

parseError:function parseError(str, hash) {
        if (this.yy.parser) {
            this.yy.parser.parseError(str, hash);
        } else {
            throw new Error(str);
        }
    },

// resets the lexer, sets new input
setInput:function (input, yy) {
        this.yy = yy || this.yy || {};
        this._input = input;
        this._more = this._backtrack = this.done = false;
        this.yylineno = this.yyleng = 0;
        this.yytext = this.matched = this.match = '';
        this.conditionStack = ['INITIAL'];
        this.yylloc = {
            first_line: 1,
            first_column: 0,
            last_line: 1,
            last_column: 0
        };
        if (this.options.ranges) {
            this.yylloc.range = [0,0];
        }
        this.offset = 0;
        return this;
    },

// consumes and returns one char from the input
input:function () {
        var ch = this._input[0];
        this.yytext += ch;
        this.yyleng++;
        this.offset++;
        this.match += ch;
        this.matched += ch;
        var lines = ch.match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno++;
            this.yylloc.last_line++;
        } else {
            this.yylloc.last_column++;
        }
        if (this.options.ranges) {
            this.yylloc.range[1]++;
        }

        this._input = this._input.slice(1);
        return ch;
    },

// unshifts one char (or a string) into the input
unput:function (ch) {
        var len = ch.length;
        var lines = ch.split(/(?:\r\n?|\n)/g);

        this._input = ch + this._input;
        this.yytext = this.yytext.substr(0, this.yytext.length - len);
        //this.yyleng -= len;
        this.offset -= len;
        var oldLines = this.match.split(/(?:\r\n?|\n)/g);
        this.match = this.match.substr(0, this.match.length - 1);
        this.matched = this.matched.substr(0, this.matched.length - 1);

        if (lines.length - 1) {
            this.yylineno -= lines.length - 1;
        }
        var r = this.yylloc.range;

        this.yylloc = {
            first_line: this.yylloc.first_line,
            last_line: this.yylineno + 1,
            first_column: this.yylloc.first_column,
            last_column: lines ?
                (lines.length === oldLines.length ? this.yylloc.first_column : 0)
                 + oldLines[oldLines.length - lines.length].length - lines[0].length :
              this.yylloc.first_column - len
        };

        if (this.options.ranges) {
            this.yylloc.range = [r[0], r[0] + this.yyleng - len];
        }
        this.yyleng = this.yytext.length;
        return this;
    },

// When called from action, caches matched text and appends it on next action
more:function () {
        this._more = true;
        return this;
    },

// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.
reject:function () {
        if (this.options.backtrack_lexer) {
            this._backtrack = true;
        } else {
            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n' + this.showPosition(), {
                text: "",
                token: null,
                line: this.yylineno
            });

        }
        return this;
    },

// retain first n characters of the match
less:function (n) {
        this.unput(this.match.slice(n));
    },

// displays already matched input, i.e. for error messages
pastInput:function () {
        var past = this.matched.substr(0, this.matched.length - this.match.length);
        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\n/g, "");
    },

// displays upcoming input, i.e. for error messages
upcomingInput:function () {
        var next = this.match;
        if (next.length < 20) {
            next += this._input.substr(0, 20-next.length);
        }
        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\n/g, "");
    },

// displays the character position where the lexing error occurred, i.e. for error messages
showPosition:function () {
        var pre = this.pastInput();
        var c = new Array(pre.length + 1).join("-");
        return pre + this.upcomingInput() + "\n" + c + "^";
    },

// test the lexed token: return FALSE when not a match, otherwise return token
test_match:function (match, indexed_rule) {
        var token,
            lines,
            backup;

        if (this.options.backtrack_lexer) {
            // save context
            backup = {
                yylineno: this.yylineno,
                yylloc: {
                    first_line: this.yylloc.first_line,
                    last_line: this.last_line,
                    first_column: this.yylloc.first_column,
                    last_column: this.yylloc.last_column
                },
                yytext: this.yytext,
                match: this.match,
                matches: this.matches,
                matched: this.matched,
                yyleng: this.yyleng,
                offset: this.offset,
                _more: this._more,
                _input: this._input,
                yy: this.yy,
                conditionStack: this.conditionStack.slice(0),
                done: this.done
            };
            if (this.options.ranges) {
                backup.yylloc.range = this.yylloc.range.slice(0);
            }
        }

        lines = match[0].match(/(?:\r\n?|\n).*/g);
        if (lines) {
            this.yylineno += lines.length;
        }
        this.yylloc = {
            first_line: this.yylloc.last_line,
            last_line: this.yylineno + 1,
            first_column: this.yylloc.last_column,
            last_column: lines ?
                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\r?\n?/)[0].length :
                         this.yylloc.last_column + match[0].length
        };
        this.yytext += match[0];
        this.match += match[0];
        this.matches = match;
        this.yyleng = this.yytext.length;
        if (this.options.ranges) {
            this.yylloc.range = [this.offset, this.offset += this.yyleng];
        }
        this._more = false;
        this._backtrack = false;
        this._input = this._input.slice(match[0].length);
        this.matched += match[0];
        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);
        if (this.done && this._input) {
            this.done = false;
        }
        if (token) {
            return token;
        } else if (this._backtrack) {
            // recover context
            for (var k in backup) {
                this[k] = backup[k];
            }
            return false; // rule action called reject() implying the next rule should be tested instead.
        }
        return false;
    },

// return next match in input
next:function () {
        if (this.done) {
            return this.EOF;
        }
        if (!this._input) {
            this.done = true;
        }

        var token,
            match,
            tempMatch,
            index;
        if (!this._more) {
            this.yytext = '';
            this.match = '';
        }
        var rules = this._currentRules();
        for (var i = 0; i < rules.length; i++) {
            tempMatch = this._input.match(this.rules[rules[i]]);
            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {
                match = tempMatch;
                index = i;
                if (this.options.backtrack_lexer) {
                    token = this.test_match(tempMatch, rules[i]);
                    if (token !== false) {
                        return token;
                    } else if (this._backtrack) {
                        match = false;
                        continue; // rule action called reject() implying a rule MISmatch.
                    } else {
                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
                        return false;
                    }
                } else if (!this.options.flex) {
                    break;
                }
            }
        }
        if (match) {
            token = this.test_match(match, rules[index]);
            if (token !== false) {
                return token;
            }
            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)
            return false;
        }
        if (this._input === "") {
            return this.EOF;
        } else {
            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\n' + this.showPosition(), {
                text: "",
                token: null,
                line: this.yylineno
            });
        }
    },

// return next match that has a token
lex:function lex() {
        var r = this.next();
        if (r) {
            return r;
        } else {
            return this.lex();
        }
    },

// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)
begin:function begin(condition) {
        this.conditionStack.push(condition);
    },

// pop the previously active lexer condition state off the condition stack
popState:function popState() {
        var n = this.conditionStack.length - 1;
        if (n > 0) {
            return this.conditionStack.pop();
        } else {
            return this.conditionStack[0];
        }
    },

// produce the lexer rule set which is active for the currently active lexer condition state
_currentRules:function _currentRules() {
        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {
            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;
        } else {
            return this.conditions["INITIAL"].rules;
        }
    },

// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available
topState:function topState(n) {
        n = this.conditionStack.length - 1 - Math.abs(n || 0);
        if (n >= 0) {
            return this.conditionStack[n];
        } else {
            return "INITIAL";
        }
    },

// alias for begin(condition)
pushState:function pushState(condition) {
        this.begin(condition);
    },

// return the number of states currently on the stack
stateStackSize:function stateStackSize() {
        return this.conditionStack.length;
    },
options: {},
performAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {
var YYSTATE=YY_START;
switch($avoiding_name_collisions) {
case 0:function _token(tok) { /*console.log(tok);*/ return tok; }
break;
case 1:
break;
case 2:
break;
case 3:return _token('VENDOR_PREFIX_IDENT');
break;
case 4:return _token('CALC_FUNC');
break;
case 5:return _token('URL_FUNC');
break;
case 6:return _token('URL_PREFIX_FUNC');
break;
case 7:return _token('DOMAIN_FUNC');
break;
case 8:return _token('REGEXP_FUNC');
break;
case 9:return _token('AT_CHARSET');
break;
case 10:return _token('AT_IMPORT');
break;
case 11:return _token('AT_NAMESPACE');
break;
case 12:return _token('AT_MEDIA');
break;
case 13:return _token('AT_DOCUMENT');
break;
case 14:return _token('AT_PAGE');
break;
case 15:return _token('AT_SUPPORTS');
break;
case 16:return _token('AT_FONT_FACE');
break;
case 17:return _token('AT_VIEWPORT');
break;
case 18:return _token('AT_COUNTER_STYLE');
break;
case 19:return _token('AT_FONT_FEATURE_VALUES');
break;
case 20:return _token('AT_KEYFRAMES');
break;
case 21:return _token('AT_KEYWORD');
break;
case 22:return _token('SELECTOR_CLASS_WITH_WHITESPACE');
break;
case 23:return _token('SELECTOR_ID_WITH_WHITESPACE');
break;
case 24:return _token('HASH_STRING');
break;
case 25:return _token('HEXA_NUMBER');
break;
case 26:return _token('DIMENSION');
break;
case 27:return _token('PERCENTAGE');
break;
case 28:return _token('NUMBER');
break;
case 29:return _token('UNICODE_RANGE');
break;
case 30:return _token('GENERAL_IDENT');
break;
case 31:return _token('INCLUDE_MATCH');
break;
case 32:return _token('DASH_MATCH');
break;
case 33:return _token('PREFIX_MATCH');
break;
case 34:return _token('SUFFIX_MATCH');
break;
case 35:return _token('SUBSTRING_MATCH');
break;
case 36:return _token('COLUMN');
break;
case 37:return _token('CDO');
break;
case 38:return _token('CDC');
break;
case 39:return _token('ASSIGN_MARK');
break;
case 40:return _token('QUOTATION_MARK');
break;
case 41:return _token('NUMBER_SIGN');
break;
case 42:return _token('DOLLAR_SIGN');
break;
case 43:return _token('APOSTROPHE');
break;
case 44:return _token('LEFT_PARENTHESIS');
break;
case 45:return _token('RIGHT_PARENTHESIS');
break;
case 46:return _token('ASTERISK_WITH_WHITESPACE');
break;
case 47:return _token('ASTERISK');
break;
case 48:return _token('PLUS_SIGN');
break;
case 49:return _token('COMMA');
break;
case 50:return _token('HYPHEN_MINUS');
break;
case 51:return _token('FULL_STOP');
break;
case 52:return _token('SOLIDUS');
break;
case 53:return _token('COLON');
break;
case 54:return _token('SEMICOLON');
break;
case 55:return _token('LESS_THAN_SIGN');
break;
case 56:return _token('GREATER_THAN_SIGN');
break;
case 57:return _token('COMMERCIAL_AT');
break;
case 58:return _token('LEFT_SQUARE_BRACKET');
break;
case 59:return _token('REVERSE_SOLIDUS');
break;
case 60:return _token('RIGHT_SQUARE_BRACKET');
break;
case 61:return _token('CIRCUMFLEX_ACCENT');
break;
case 62:return _token('LEFT_CURLY_BRACKET');
break;
case 63:return _token('RIGHT_CURLY_BRACKET');
break;
case 64:return _token('VERTICAL_LINE ');
break;
case 65:return _token('TILDE');
break;
case 66:return _token('GENERAL_IDENT');
break;
case 67:return _token('GENERAL_IDENT');
break;
case 68:return _token('GENERAL_IDENT');
break;
case 69:return _token('OPERATOR_AND');
break;
case 70:return _token('OPERATOR_OR');
break;
case 71:return _token('OPERATOR_ONLY');
break;
case 72:return _token('OPERATOR_NOT');
break;
case 73:return _token('STRING');
break;
case 74:return _token('GENERAL_IDENT');
break;
case 75:return _token('N');
break;
case 76:return _token('SELECTOR_TYPE_WITH_WHITESPACE');
break;
case 77:return _token('GENERAL_IDENT');
break;
case 78:return _token('IMPORTANT');
break;
case 79:return _token('EOF');
break;
case 80:return _token(yy_.yytext);
break;
}
},
rules: [/^(?:{hack})/,/^(?:\/\*[^*]*\*+([^\/][^*]*\*+)*\/)/,/^(?:(\s)+)/,/^(?:([-](webkit|moz|o|ms\b)[-])([-]?([a-zA-Z]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))([_]|([a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377])))*))/,/^(?:calc\()/,/^(?:url(\(((\s))*((([!#$%&*-~]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))*)|(("([\t !#$%&(-~]|\\{nl}|'|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))*")|('([\t !#$%&(-~]|\\{nl}|"|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))*')))((\s))*\)))/,/^(?:url-prefix(\(((\s))*((([!#$%&*-~]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))*)|(("([\t !#$%&(-~]|\\{nl}|'|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))*")|('([\t !#$%&(-~]|\\{nl}|"|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))*')))((\s))*\)))/,/^(?:domain(\(((\s))*((([!#$%&*-~]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))*)|(("([\t !#$%&(-~]|\\{nl}|'|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))*")|('([\t !#$%&(-~]|\\{nl}|"|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))*')))((\s))*\)))/,/^(?:regexp\(((\s))*(("([\t !#$%&(-~]|\\{nl}|'|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))*")|('([\t !#$%&(-~]|\\{nl}|"|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))*'))((\s))*\))/,/^(?:@charset\b)/,/^(?:@import\b)/,/^(?:@namespace\b)/,/^(?:@media\b)/,/^(?:@document\b)/,/^(?:@page\b)/,/^(?:@supports\b)/,/^(?:@font-face\b)/,/^(?:@viewport\b)/,/^(?:@counter-style\b)/,/^(?:@font-feature-values\b)/,/^(?:@([-](webkit|moz|o|ms\b)[-])?keyframes\b)/,/^(?:[@]([-]?([a-zA-Z]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))([_]|([a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377])))*))/,/^(?:[.]([-]?([a-zA-Z]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))([_]|([a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377])))*)(\s)+)/,/^(?:[#]([-]?([a-zA-Z]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))([_]|([a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377])))*)(\s)+)/,/^(?:[#]([-]?([a-zA-Z]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))([_]|([a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377])))*))/,/^(?:[#]([0-9a-fA-F])+)/,/^(?:(([\+\-]?[0-9]+(\.[0-9]+)?)|([\+\-]?\.[0-9]+))([-]?([a-zA-Z]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))([_]|([a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377])))*))/,/^(?:(([\+\-]?[0-9]+(\.[0-9]+)?)|([\+\-]?\.[0-9]+))%)/,/^(?:(([\+\-]?[0-9]+(\.[0-9]+)?)|([\+\-]?\.[0-9]+)))/,/^(?:[Uu]\+(\?{1,6}|{h}(\?{0,5}|{h}(\?{0,4}|{h}(\?{0,3}|{h}(\?{0,2}|{h}(\??|{h})))))))/,/^(?:-([-]?([a-zA-Z]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))([_]|([a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377])))*))/,/^(?:~=)/,/^(?:\|=)/,/^(?:\^=)/,/^(?:\$=)/,/^(?:\*=)/,/^(?:\|\|)/,/^(?:<!--)/,/^(?:-->)/,/^(?:=)/,/^(?:\\)/,/^(?:#)/,/^(?:\$)/,/^(?:‘)/,/^(?:\()/,/^(?:\))/,/^(?:[*](\s)+)/,/^(?:[*])/,/^(?:\+)/,/^(?:,)/,/^(?:-)/,/^(?:\.)/,/^(?:\/)/,/^(?::)/,/^(?:;)/,/^(?:<)/,/^(?:>)/,/^(?:@)/,/^(?:\[)/,/^(?:\\)/,/^(?:\])/,/^(?:\^)/,/^(?:\{)/,/^(?:\})/,/^(?:\|)/,/^(?:~)/,/^(?:((and\b)|(or\b)|(only\b)|(not\b))([_]|([a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377])))+)/,/^(?:{media_type}([_]|([a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377])))+)/,/^(?:{media_feature}([_]|([a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377])))+)/,/^(?:(and\b))/,/^(?:(or\b))/,/^(?:(only\b))/,/^(?:(not\b))/,/^(?:(("([\t !#$%&(-~]|\\{nl}|'|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))*")|('([\t !#$%&(-~]|\\{nl}|"|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))*')))/,/^(?:n([-]?([a-zA-Z]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))([_]|([a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377])))*))/,/^(?:n\b)/,/^(?:([-]?([a-zA-Z]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))([_]|([a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377])))*)(\s)+)/,/^(?:([-]?([a-zA-Z]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377]))([_]|([a-zA-Z0-9-]|([\200-\377])|((\\{h}{1,6}[ \t\r\n\f]?)|\\[ -~\200-\377])))*))/,/^(?:!important\b)/,/^(?:$)/,/^(?:.)/],
conditions: {"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"inclusive":true}}
});
return lexer;
})();
parser.lexer = lexer;
function Parser () {
  this.yy = {};
}
Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();


if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = cssparser;
exports.Parser = cssparser.Parser;
exports.parse = function () { return cssparser.parse.apply(cssparser, arguments); };
exports.main = function commonjsMain(args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}